<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[醉過方知酒濃]]></title>
  <link href="http://j0x7c4.github.io/atom.xml" rel="self"/>
  <link href="http://j0x7c4.github.io/"/>
  <updated>2014-04-22T02:49:42+08:00</updated>
  <id>http://j0x7c4.github.io/</id>
  <author>
    <name><![CDATA[Eli]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在路上遇见]]></title>
    <link href="http://j0x7c4.github.io/blog/2014/04/22/meet-you-on-the-road/"/>
    <updated>2014-04-22T02:00:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2014/04/22/meet-you-on-the-road</id>
    <content type="html"><![CDATA[<p>好久没写博客，因为有些事情，不论是巧合还是注定，终究是发生了，写博客的事情就被抛到脑后了。以至于博客原来的存放地方已经沦落成了“美团云”都不知道，现在又将其搬至别处才能继续浏览。</p>

<p>现在的社交圈里，<code>秘密</code>横行，大家都不在当面说真话，看似和谐的关系，背地里却是各种的黑暗。随着各种消息发布应用的泛滥，比如那个要发文字还必须长按拍照键的某圈，那个到处最长只有140的渣浪微博，那个各种藏头诗和无下限评论的某易，也许只有博客，这种最古老，最原始的发表自己观点的工具，才能真实的传递自己的想法。</p>

<p>刚刚装了“一个”，非常应景的，打开来看到的第一句话就是:</p>

<blockquote>
  <p>你来人间一趟，你要看看太阳，和你的心上人，一起走在街上。——海子 《夏天的太阳》</p>
</blockquote>

<p>在路上遇见了很多，曾经以为不会发生的事情，终究是发生了；曾经以为肯定发生的事情，也许就是不会发生。</p>

<p>感谢能在人生的路上遇见，也许我们之前曾无数次擦肩而过，这次终于是让我抓住了你。以后的路我们可以一起走下去，和你看河岸夕阳，流浪到天边。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[简单的iOS互动]]></title>
    <link href="http://j0x7c4.github.io/blog/2014/02/01/begin-ios-develop/"/>
    <updated>2014-02-01T01:57:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2014/02/01/begin-ios-develop</id>
    <content type="html"><![CDATA[<p>最近想开发iOS上的app，却发现以前上课时学的iOS开发已经忘的差不多了，于是决定重拾objective-c，和iOS的开发。</p>

<p>我在看Beginning iOS 6 Development Exploring the iOS SDK 一书，这书有中文的翻译版，也翻译的不错，但还是看原版比较有感觉。实体书价格不菲，而且iOS7的版本也快出版了，觉得现在买一本iOS6的不太合适，所以还是在网上找了pdf，先看起来，等出了iOS7的版本后再买吧。</p>

<p><img src="http://img5.douban.com/lpic/s26815358.jpg" /></p>

<p>iOS的开发也是MVC(Model-View-Controller)的框架，目前是个流行的开发框架。在Chapter 4中，作者介绍了如何构建简单的互动（通过按钮改变文字的内容）。其中提到了<code>Outlet</code>和<code>Action</code>两个东西，<code>Outlet</code>是controller中的对象，他会映射到view中的一个真实的元素。<code>Action</code>是controller的方法，他反映了view中一个元素的动作，就是说view中的某个元素触发了一个事件（比如按钮被按了一下），会执行相应的action方法。</p>

<p>创建view中的元素很方便，在storyboard中拖出一个UI元素来，然后按住<code>control</code>键，再拖动指针，拉到<code>xxController.h</code>中的interface中，就能选择是创建一个<code>Outlet</code>还是一个<code>Action</code>. 也可以事先在<code>xxController.h</code>中创建好相应的<code>Outlet</code>对象和<code>Action</code>方法，然后按住<code>control</code>，指针拖动到这些对象和方法上时，会自动高亮这些代码，放开指针，就能创建映射。不过我还是觉得先创建UI元素，再拖动指针自动创建<code>Outlet</code>或者<code>Action</code>比较方便。</p>

<p>在<code>xxController.h</code>中进行声明之后，可以在<code>xxController.m</code>中把代码实现。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>BIDViewController.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="objectivec"><span class="line"><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class="line">
</span><span class="line"><span class="cp">#ifndef IBOutlet</span>
</span><span class="line"><span class="cp">#define IBOutlet</span>
</span><span class="line"><span class="cp">#endif</span>
</span><span class="line">
</span><span class="line"><span class="k">@interface</span> <span class="nc">BIDViewController</span> : <span class="nc">UIViewController</span>
</span><span class="line">
</span><span class="line"><span class="k">@property</span> <span class="p">(</span><span class="n">weak</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="n">UILabel</span> <span class="o">*</span><span class="n">statusLabel</span><span class="p">;</span>
</span><span class="line"><span class="k">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonPressed:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>BIDViewController.m</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="objectivec"><span class="line"><span class="cp">#import &quot;BIDViewController.h&quot;</span>
</span><span class="line">
</span><span class="line"><span class="k">@implementation</span> <span class="nc">BIDViewController</span>
</span><span class="line">
</span><span class="line"><span class="k">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">buttonPressed:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span> <span class="p">{</span>
</span><span class="line">  <span class="n">NSString</span> <span class="o">*</span><span class="n">title</span> <span class="o">=</span> <span class="p">[</span><span class="n">sender</span> <span class="nl">titleForState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class="line">  <span class="n">NSString</span> <span class="o">*</span><span class="n">text</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%@ button pressed.&quot;</span><span class="p">,</span><span class="n">title</span><span class="p">];</span>
</span><span class="line">  <span class="n">_statusLabel</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">text</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[不小心又被回忆填满]]></title>
    <link href="http://j0x7c4.github.io/blog/2014/01/29/full-of-regret/"/>
    <updated>2014-01-29T02:00:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2014/01/29/full-of-regret</id>
    <content type="html"><![CDATA[<p>电脑屏幕上不时跳出磁盘已满的消息，弹出来多了，就决定清理一下硬盘，看看哪些东西可以永久丢掉的。</p>

<p>打开了以前手机拍的视频的文件夹，那都是2，3年前的事了。真的不该手贱打开来的，看了之后心里又起了一点点震动。</p>

<p>到底是什么原因，可以让原本都下决心忘记的事情又重新出现在了眼前。尝试着忘掉这些事情，但是却因为一些几分钟甚至几秒钟的视频，让自己又开始动摇。</p>

<p>故事什么时候才能有结尾。</p>

<p><img src="http://farm4.staticflickr.com/3781/10802229284_e2fc908fdb_o.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UI大改]]></title>
    <link href="http://j0x7c4.github.io/blog/2014/01/22/ui-redesign/"/>
    <updated>2014-01-22T23:01:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2014/01/22/ui-redesign</id>
    <content type="html"><![CDATA[<p>最近对UI设计突然起了兴趣。在很久很久以前，还在读初中的时候就开始搞网页设计和Photoshop，不过我最终还是没能走上平面设计，或者UED的道路。这几天对bootstrap研究了一下，正好趁热打铁，顺便丰富一下自己的UI设计理念。</p>

<p>向公司的MM询问到了UI相关的网站，其中最喜欢的是<a href="http://dribbble.com/">http://dribbble.com/</a>.虽然自己的设计能力有限，但是模仿能力我觉得还是挺不错的。于是我结合了dribble中那些作品的配色，和强大的bootstrap，开始了自己Blog的UI创作。这里要强调一下Responsive的概念，这真的很棒！根据当前窗口的尺寸，可以显示不同的排版。我的理解还停留在以前通过判断agent来改变CSS的阶段，现在用了这个之后感觉方便更多了。UI大改的第一步基本上完成了，包括页面的配色，大致的样式以及页面布局。接下来准备好好设计一些icon，比如<code>favicon</code>, <code>logo</code>. 当然还有<code>banner</code>.</p>

<h2 id="ps">PS</h2>
<p>最近heroku的连接速度越来越慢了，无意中发现了<a href="https://stdyun.com/">stdyun</a>, 他提供免费的octopress的托管（说白了就是帮你存储一些静态网页嘛），目前把部落格放到上面，感觉从部署到连接，都很流畅，以后更新部落格再也不用翻墙了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用python写hive的UDAF]]></title>
    <link href="http://j0x7c4.github.io/blog/2014/01/05/hive-stream-with-python/"/>
    <updated>2014-01-05T15:33:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2014/01/05/hive-stream-with-python</id>
    <content type="html"><![CDATA[<p>之前写过一篇关于说Python无法实现hive UDAF的文章，后来经过尝试，python完全可以代替JAVA实现hive中常用的UDF,UDAF,及UDTF.</p>

<p>通过<code>transform</code>语句，可以将hive语句中<code>select</code>得到的数据通过类似hadoop中<a href="http://hadoop.apache.org/docs/stable1/streaming.html">streaming</a>的方式，传给<code>using</code>语句中的脚本作为输入。用<code>DISTRIBUTE BY</code>将mapper的输出分类给reducer. </p>

<h2 id="udaf">UDAF</h2>

<p>由于<code>SELECT</code>和<code>DISTRIBUTE BY</code>是有先后顺序，所以要先得到经过<code>DISTRIBUTE BY</code>的数据，再用<code>TRANSFORM</code>进行转化，保证相同的key落入到同一个reducer中去。reducer把处理后的结果以<code>AS</code>中的字段格式进行输出。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class=""><span class="line">FROM (
</span><span class="line">SELECT a,b,c,d
</span><span class="line">FROM db
</span><span class="line">DISTRIBUTE BY a
</span><span class="line">SORT BY a,b ) T
</span><span class="line">SELECT TRANSFORM(T.a, T.b, T.c, T.d)
</span><span class="line">USING 'python udaf.py'
</span><span class="line">AS (a,b,e)</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c">#! /usr/bin/env python</span>
</span><span class="line"><span class="c">#encoding=utf-8</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">sys</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">logging</span>
</span><span class="line">
</span><span class="line"><span class="n">current</span><span class="o">=</span><span class="p">{</span><span class="s">&quot;a&quot;</span><span class="p">:</span><span class="bp">None</span><span class="p">,</span><span class="s">&quot;b&quot;</span><span class="p">:</span><span class="bp">None</span><span class="p">,</span><span class="s">&quot;e&quot;</span><span class="p">:</span><span class="bp">None</span><span class="p">}</span>
</span><span class="line"><span class="n">a</span><span class="o">=</span><span class="bp">None</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">foo</span> <span class="p">(</span><span class="n">c</span><span class="p">,</span><span class="n">d</span><span class="p">):</span>
</span><span class="line">    <span class="n">e</span> <span class="o">=</span> <span class="s">&#39;&#39;</span>
</span><span class="line">    <span class="c">#To-do, write something</span>
</span><span class="line">    <span class="k">return</span> <span class="n">e</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">output</span> <span class="p">():</span>
</span><span class="line">    <span class="c">#To-do, write something</span>
</span><span class="line">    <span class="k">print</span> <span class="o">...</span>
</span><span class="line">
</span><span class="line"><span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="n">sys</span><span class="o">.</span><span class="n">stdin</span><span class="p">:</span>
</span><span class="line">    <span class="k">try</span><span class="p">:</span>
</span><span class="line">        <span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">d</span> <span class="o">=</span> <span class="n">l</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\t</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class="line">        <span class="n">e</span><span class="o">=</span><span class="n">foo</span><span class="p">(</span><span class="n">c</span><span class="p">,</span><span class="n">d</span><span class="p">)</span>
</span><span class="line">    <span class="k">except</span><span class="p">:</span>
</span><span class="line">        <span class="n">logging</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="n">l</span><span class="p">)</span>
</span><span class="line">        <span class="k">continue</span>
</span><span class="line">
</span><span class="line">    <span class="k">if</span> <span class="n">current</span><span class="p">[</span><span class="s">&quot;a&quot;</span><span class="p">]</span> <span class="o">!=</span> <span class="n">a</span><span class="p">:</span>
</span><span class="line">        <span class="k">if</span> <span class="n">current</span><span class="p">[</span><span class="s">&quot;a&quot;</span><span class="p">]:</span>
</span><span class="line">            <span class="n">output</span><span class="p">()</span>
</span><span class="line">        <span class="n">current</span><span class="p">[</span><span class="s">&quot;a&quot;</span><span class="p">]</span><span class="o">=</span><span class="n">a</span>
</span><span class="line">        <span class="n">current</span><span class="p">[</span><span class="s">&quot;b&quot;</span><span class="p">]</span><span class="o">=</span><span class="n">b</span>
</span><span class="line">        <span class="n">current</span><span class="p">[</span><span class="s">&quot;e&quot;</span><span class="p">]</span><span class="o">=</span><span class="n">e</span>
</span><span class="line">    <span class="k">else</span><span class="p">:</span>
</span><span class="line">        <span class="n">current</span><span class="p">[</span><span class="s">&quot;e&quot;</span><span class="p">]</span><span class="o">+=</span><span class="n">e</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="n">current</span><span class="p">[</span><span class="s">&quot;a&quot;</span><span class="p">]:</span>
</span><span class="line">    <span class="n">output</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section">代码的重用</h2>

<p>如果按照以上的方式，是可以实现UDAF的效果，但是代码的重用性不高。如果在java中，可以写多个不同功能的类，然后打在一个jar包中。不过在python中实现起来有点困难，比如我在另一个py脚本中定义两个函数foo,bar,在一个udaf脚本中需要先import那个py 模块，然后再用这两个函数。这样就需要在<code>add file</code>中同时添加两个py脚本，在实际使用过程中，发现添加多个py脚本后，在py代码中使用import语句，会找不到那个文件的路径。原因是在hdfs中，这些py脚本不一定会在同一个目录下。所以只能把所有需要用到的函数写在同一个py脚本中。这样一来，以后需要同种功能的函数时，需要重写这些代码。之后再看看有没有其他可行的方案。</p>

<p><a href="http://j0x7c4.github.io/blog/2013/09/25/hive-python-udf/">HIVE中使用python实现UDF</a></p>

<p><a href="http://j0x7c4.github.io/blog/2013/11/01/udf-in-python-sucks/">在hive中使用python来做UDF有点糟</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Octopress中使用LaTeX]]></title>
    <link href="http://j0x7c4.github.io/blog/2013/12/26/add-latex/"/>
    <updated>2013-12-26T15:07:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2013/12/26/add-latex</id>
    <content type="html"><![CDATA[<p>在Octopress中显示LaTeX的方法，比想象中的要简单。只要几步，就能完成。</p>

<h2 id="headmathjax">在head中加入MathJax</h2>

<p>MathJax用来对LaTeX脚本进行渲染。</p>

<p>可以把下面的代码放到<code>source/_include/custom/head.html</code>中。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="c">&lt;!-- mathjax config similar to math.stackexchange --&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/x-mathjax-config&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nx">MathJax</span><span class="p">.</span><span class="nx">Hub</span><span class="p">.</span><span class="nx">Config</span><span class="p">({</span>
</span><span class="line">  <span class="nx">jax</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;input/TeX&quot;</span><span class="p">,</span> <span class="s2">&quot;output/HTML-CSS&quot;</span><span class="p">],</span>
</span><span class="line">  <span class="nx">tex2jax</span><span class="o">:</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">inlineMath</span><span class="o">:</span> <span class="p">[</span> <span class="p">[</span><span class="s1">&#39;$&#39;</span><span class="p">,</span> <span class="s1">&#39;$&#39;</span><span class="p">]</span> <span class="p">],</span>
</span><span class="line">    <span class="nx">displayMath</span><span class="o">:</span> <span class="p">[</span> <span class="p">[</span><span class="s1">&#39;$$&#39;</span><span class="p">,</span> <span class="s1">&#39;$$&#39;</span><span class="p">]],</span>
</span><span class="line">    <span class="nx">processEscapes</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class="line">    <span class="nx">skipTags</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;script&#39;</span><span class="p">,</span> <span class="s1">&#39;noscript&#39;</span><span class="p">,</span> <span class="s1">&#39;style&#39;</span><span class="p">,</span> <span class="s1">&#39;textarea&#39;</span><span class="p">,</span> <span class="s1">&#39;pre&#39;</span><span class="p">,</span> <span class="s1">&#39;code&#39;</span><span class="p">]</span>
</span><span class="line">  <span class="p">},</span>
</span><span class="line">  <span class="nx">messageStyle</span><span class="o">:</span> <span class="s2">&quot;none&quot;</span><span class="p">,</span>
</span><span class="line">  <span class="s2">&quot;HTML-CSS&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="nx">preferredFont</span><span class="o">:</span> <span class="s2">&quot;TeX&quot;</span><span class="p">,</span> <span class="nx">availableFonts</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;STIX&quot;</span><span class="p">,</span><span class="s2">&quot;TeX&quot;</span><span class="p">]</span> <span class="p">}</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line"><span class="nt">&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="kramdownrdiscount">使用kramdown代替默认的rdiscount</h2>

<p>从网上的介绍来看，kramdown对于MathJax的支持要比rediscount好。</p>

<ul>
  <li>
    <p>在<code>Gemfile</code>中加入一行<code>gem 'kramdown'</code></p>
  </li>
  <li>
    <p>在<code>_config.yml</code>修改<code>markdown: kramdown</code></p>
  </li>
  <li>
    <p><code>bundle install</code></p>
  </li>
</ul>

<p>另外在使用上，kramdown的格式比rdiscount更加严谨，比如在插入code block时，必须严格的与上一行间隔一行。导致我又检查了一遍以前的文章，改了很多地方。</p>

<h2 id="sample">Sample</h2>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align*}
  & \phi(x,y) = \phi \left(\sum_{i=1}^n x_ie_i, \sum_{j=1}^n y_je_j \right)
  = \sum_{i=1}^n \sum_{j=1}^n x_i y_j \phi(e_i, e_j) = \\
  & (x_1, \ldots, x_n) \left( \begin{array}{ccc}
      \phi(e_1, e_1) & \cdots & \phi(e_1, e_n) \\
      \vdots & \ddots & \vdots \\
      \phi(e_n, e_1) & \cdots & \phi(e_n, e_n)
    \end{array} \right)
  \left( \begin{array}{c}
      y_1 \\
      \vdots \\
      y_n
    \end{array} \right)
\end{align*}
 %]]&gt;</script>

<p>上面的这些就是通过下面的LaTeX代码显示的：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="latex"><span class="line"><span class="sb">$$</span><span class="nb"></span>
</span><span class="line"><span class="nv">\begin</span><span class="nb">{align</span><span class="o">*</span><span class="nb">}</span>
</span><span class="line"><span class="nb">  &amp; </span><span class="nv">\phi</span><span class="o">(</span><span class="nb">x,y</span><span class="o">)</span><span class="nb"> </span><span class="o">=</span><span class="nb"> </span><span class="nv">\phi</span><span class="nb"> </span><span class="nv">\left</span><span class="o">(</span><span class="nv">\sum</span><span class="nb">_{i</span><span class="o">=</span><span class="m">1</span><span class="nb">}^n x_ie_i, </span><span class="nv">\sum</span><span class="nb">_{j</span><span class="o">=</span><span class="m">1</span><span class="nb">}^n y_je_j </span><span class="nv">\right</span><span class="o">)</span><span class="nb"></span>
</span><span class="line"><span class="nb">  </span><span class="o">=</span><span class="nb"> </span><span class="nv">\sum</span><span class="nb">_{i</span><span class="o">=</span><span class="m">1</span><span class="nb">}^n </span><span class="nv">\sum</span><span class="nb">_{j</span><span class="o">=</span><span class="m">1</span><span class="nb">}^n x_i y_j </span><span class="nv">\phi</span><span class="o">(</span><span class="nb">e_i, e_j</span><span class="o">)</span><span class="nb"> </span><span class="o">=</span><span class="nb"> </span><span class="nv">\\</span><span class="nb"></span>
</span><span class="line"><span class="nb">  &amp; </span><span class="o">(</span><span class="nb">x_</span><span class="m">1</span><span class="nb">, </span><span class="nv">\ldots</span><span class="nb">, x_n</span><span class="o">)</span><span class="nb"> </span><span class="nv">\left</span><span class="o">(</span><span class="nb"> </span><span class="nv">\begin</span><span class="nb">{array}{ccc}</span>
</span><span class="line"><span class="nb">      </span><span class="nv">\phi</span><span class="o">(</span><span class="nb">e_</span><span class="m">1</span><span class="nb">, e_</span><span class="m">1</span><span class="o">)</span><span class="nb"> &amp; </span><span class="nv">\cdots</span><span class="nb"> &amp; </span><span class="nv">\phi</span><span class="o">(</span><span class="nb">e_</span><span class="m">1</span><span class="nb">, e_n</span><span class="o">)</span><span class="nb"> </span><span class="nv">\\</span><span class="nb"></span>
</span><span class="line"><span class="nb">      </span><span class="nv">\vdots</span><span class="nb"> &amp; </span><span class="nv">\ddots</span><span class="nb"> &amp; </span><span class="nv">\vdots</span><span class="nb"> </span><span class="nv">\\</span><span class="nb"></span>
</span><span class="line"><span class="nb">      </span><span class="nv">\phi</span><span class="o">(</span><span class="nb">e_n, e_</span><span class="m">1</span><span class="o">)</span><span class="nb"> &amp; </span><span class="nv">\cdots</span><span class="nb"> &amp; </span><span class="nv">\phi</span><span class="o">(</span><span class="nb">e_n, e_n</span><span class="o">)</span><span class="nb"></span>
</span><span class="line"><span class="nb">    </span><span class="nv">\end</span><span class="nb">{array} </span><span class="nv">\right</span><span class="o">)</span><span class="nb"></span>
</span><span class="line"><span class="nb">  </span><span class="nv">\left</span><span class="o">(</span><span class="nb"> </span><span class="nv">\begin</span><span class="nb">{array}{c}</span>
</span><span class="line"><span class="nb">      y_</span><span class="m">1</span><span class="nb"> </span><span class="nv">\\</span><span class="nb"></span>
</span><span class="line"><span class="nb">      </span><span class="nv">\vdots</span><span class="nb"> </span><span class="nv">\\</span><span class="nb"></span>
</span><span class="line"><span class="nb">      y_n</span>
</span><span class="line"><span class="nb">    </span><span class="nv">\end</span><span class="nb">{array} </span><span class="nv">\right</span><span class="o">)</span><span class="nb"></span>
</span><span class="line"><span class="nv">\end</span><span class="nb">{align</span><span class="o">*</span><span class="nb">}</span>
</span><span class="line"><span class="s">$$</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开发Chrome插件中遇到的一些坑]]></title>
    <link href="http://j0x7c4.github.io/blog/2013/12/23/my-first-chrome-extension/"/>
    <updated>2013-12-23T00:03:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2013/12/23/my-first-chrome-extension</id>
    <content type="html"><![CDATA[<p>前几天参加了一个hackthon, 在大约24小时的时间内，完成了一个chrome插件，插件扩展大众点评现有的一些功能，比如增加了街景视图，网页上的右键搜索菜单，和本地的点评商户收藏夹。具体可以自己使用看看，不过目前还没上架，可以下载源码来自己玩玩。<a href="https://github.com/j0x7c4/hackstreet">https://github.com/j0x7c4/hackstreet</a></p>

<p>以前没有太多JS的开发经验，这次开发是不断掉进坑里，然后再从坑里爬出来，直到最后有个完整版本出来。先说说chrome插件的配置文件吧，插件中有个叫<code>manifest.json</code>的文件，他管理了插件中所需的所有东西。</p>

<h2 id="hack">Hack现有网页的内容</h2>

<p>由于我们的插件需要修改大众点评网现有网页内容，比如在网页中插入我们的街景视图(我们的街景功能是用了腾讯街景的API). 这个就需要让<code>content_scripts</code>来做，他主要包括三个字段，<code>matches</code>, <code>css</code>, 和<code>js</code>. 只要把自己的JS文件名放到它的<code>js</code>字段中，一旦访问的URL符合规则，就会执行js中的脚本。例如：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="s2">&quot;content_scripts&quot;</span><span class="err">:</span> <span class="p">[</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="nt">&quot;matches&quot;</span><span class="p">:[</span><span class="s2">&quot;http://www.dianping.com/shop/*&quot;</span><span class="p">],</span>
</span><span class="line">    <span class="nt">&quot;css&quot;</span><span class="p">:[</span><span class="s2">&quot;bootstrap.css&quot;</span><span class="p">],</span>
</span><span class="line">    <span class="nt">&quot;js&quot;</span><span class="p">:[</span><span class="s2">&quot;hackit.js&quot;</span><span class="p">]</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>其中的CSS可以对自己添的内容制定样式。这个看似很简单，其实里面暗藏了一个大坑，不过也是因为自己太粗心，没有仔细看doc所导致的。由于我要在原有网页中嵌入一个街景视图，而街景视图用到了某企鹅的街景API，而那个API又必须是在线调用的。在普通的HTML中，要调用一个网上的脚本很方便，只需添加<code>&lt;script&gt;</code>标签，在<code>src</code>中指定脚本的URL。但是在chrome插件中，无法通过类似的方法，将脚本载入当前页面，并在插件的js脚本中调用。因为<code>content_scripts</code>中的脚本虽然可以访问当前页面的内容，但是无法调用当前页面中的js函数，这个在Chrome的开发文档中有提到：</p>

<blockquote>
  <p>However, content scripts have some limitations. They cannot:</p>

  <p>Use chrome.* APIs (except for parts of chrome.extension)</p>

  <p>Use variables or functions defined by their extension’s pages</p>

  <p>Use variables or functions defined by web pages or by other content scripts</p>
</blockquote>

<p><a href="http://developer.chrome.com/extensions/content_scripts.html">http://developer.chrome.com/extensions/content_scripts.html</a></p>

<p>因此只能把企鹅的js载到本地啦，然后再hack一下那个脚本，因为在本地调用需要做些修改。</p>

<h2 id="section">还有一些小东西</h2>

<p>开发chrome插件还有一些小东西可以分享一下，比如那个icon，文档中说最好是19x19的png图片，但如果真的把图片做成19x19，显示在浏览器中会比较糊（可能是因为我的retina屏幕）。其实把图片弄的大一点也是可以的，只要长宽比例是1:1就好。</p>

<p>如果在脚本中需要有一些跨域的请求，比如我将地址转化成经纬度时，是用到了google map的api, 我需要向<code>https://maps.googleapis.com/</code>发送请求，这就需要把<code>https://maps.googleapis.com/*</code>加入到<code>manifest.json</code>的<code>permissions</code>字段中。</p>

<p>还可以把一些公用的函数写在<code>background</code>的脚本中，然后通过message passing的方式去调用这些函数，不过具体效率还没测试过。在<code>background</code>中，可以直接使用<code>&lt;script&gt;</code>标签来添加在线的脚本。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[好用的sublime插件]]></title>
    <link href="http://j0x7c4.github.io/blog/2013/12/11/todays-plugin-of-sublime/"/>
    <updated>2013-12-11T16:35:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2013/12/11/todays-plugin-of-sublime</id>
    <content type="html"><![CDATA[<p>今天尝试了3个很好用的sublime插件，在这里mark一下。这些插件都能在sublime的Package Control中找到，可以在线安装。</p>

<h2 id="sublimelinter">SublimeLinter</h2>

<p>经常用sublime写python和一些shell的脚本，有些地方写错了不太容易发现。这个插件可以自动检测一些格式上的错误。</p>

<h2 id="sidebarenhancements">SideBarEnhancements</h2>

<p>增强了sublime sidebar的功能，在sidebar上点右键能看到很多新的选项，谁用谁知道。</p>

<h2 id="filediffs">FileDiffs</h2>

<p>为sublime增加了diff的功能，真的很不错。直接在sidebar可以点右键选择需要比较的文件。</p>

<h2 id="sidebargit">SideBarGit</h2>

<p>在有git的目录下，能在sublime的状态栏中显示当前git的分支，虽然这个功能很平凡，但是提醒你当前的分支是很重要的，改code不要改错分支哦~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[不知不觉走了许多路，但又像是原地踏步]]></title>
    <link href="http://j0x7c4.github.io/blog/2013/12/06/some-regrets/"/>
    <updated>2013-12-06T02:01:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2013/12/06/some-regrets</id>
    <content type="html"><![CDATA[<p>畢業，找工作，入職開始上班，手上有活干，這一整串事情就發生在短短3個月里。回想起來生活還挺豐富的，11月份還去了一趟日本玩。不知不覺的好像自己走了很多路，經歷了很多事，以前幻想的，有些破滅了，有些還堅持著。</p>

<p>最近開始有點忙了，工作上要做的事情漸漸有點眉目，迫切的想完成，可是又擔心自己目前的水平難以勝任。感覺工作效率越來越低了，沒有了一種披荊斬棘的快感。另外下班后做的事也越來越豐富了，每週固定要有幾次去健身，對於自己的身材還是不太滿意。還有一個晚上需要留出來參加吉他社，希望自己對吉他的熱情不要再是三分鐘熱度了。暫時現在看來還挺有熱情，在家裡看劇也是把吉他抱在懷裡，只是晚上太晚就不敢彈，怕吵到鄰居吧。最近，還找到了新的美劇《S.H.I.E.L.D》，它擴展了《復仇者聯盟》的劇情，相當於是Marvel弄的外傳吧，和主線劇情沒什麼太大相關，但看起來還挺有意思。其餘的時間，就留給了LOL，不過現在都是一個人打路人局，有時候別人坑我，有時候我坑別人，大家坑來坑去。還是想和小夥伴一起打，最好能有妹子一起。可是現實就是和理想有這麼點坑爹的差距。前段時間還心血來潮鼓搗一個微博相關的應用，可是目前在技術上遇到瓶頸，沒有特別好的方法解決，也沒有特別大的動力，於是就擱置了，等下次心血來潮再繼續吧。</p>

<p>每天就這樣起床，上班，下班，睡覺，時間過得很快，一下次就12月份了。之前看到一本書中講，“人腦強大到足以超越時空的限制”，這句話很好的解釋了有時候感覺時間很快，而有時候又很慢。因為我們的大腦太強大了，以至於在全力使用他的時候，時間都感覺跑的飛快。但是我感覺時間過得太快了，我的成長似乎沒有跟上時間的腳步。雖然感覺空餘時間做了很多事情，但找不到讓我興奮起來的點。原來我走的這麼多路，也只是在原地踏步吧。</p>

<p>另外再抱怨一下，這上海的鬼天氣真的無法忍受了。感覺自己快要被毒死了。就沒人來管管這個空氣污染嗎？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[搭建能在天朝使用的web app]]></title>
    <link href="http://j0x7c4.github.io/blog/2013/11/30/heroku-gae-python/"/>
    <updated>2013-11-30T20:23:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2013/11/30/heroku-gae-python</id>
    <content type="html"><![CDATA[<p>对于像我这种整天感觉很闲的人，总是会在代码中寻找自己的小世界，没事就写个web应用。可是身处天朝，资源有限。国际上很多知名的服务都不能用，比如某G的app engine. 不过还是有些漏网之鱼，没有完全被墙的。比如Heroku <a href="http://www.heroku.com">http://www.heroku.com</a>. (你现在看到的这个博客，就是放在heroku上的 &gt;_&lt; )</p>

<p>Heroku是通过git的方式将本地的代码部署到云上。前面讲到它没有完全被墙，因为放在它上面的app在国内是可以访问的，但是通过git部署的过程，是被墙的。所以我都是需要VPN才能将代码部署到heroku上。Heroku支持很多语言，我最常用的就是python了。刚刚用Django在Heroku上部署了一个web app. 可以参照下面这篇文章，在heroku上部署django <a href="https://devcenter.heroku.com/articles/getting-started-with-django">https://devcenter.heroku.com/articles/getting-started-with-django</a></p>

<p>如果在django中需要用到SESSION或者COOKIE的话，是需要使用heroku提供的数据库的。因为在heroku上程序无法在运行的时候创建静态文件，所以它们是变相的存储在数据库中的。数据库添加可以进入网站的dashboard，在add-on中添加一个免费的Heroku Postgresql. 免费的额度支持10MB的数据库(感觉有点小=_=).</p>

<!--more-->

<p><img src="https://addons.heroku.com/provider/addons/heroku-postgresql/icons/catalog.png" /></p>

<p>于是乎，我就想到了GAE，它免费的数据库支持到了1GB. 虽然他上面的服务在天朝无法访问，但是如果请求是从heroku发出去的，然后heroku再就收GAE传回的数据显示在app上，就没问题了！带着这个想法，我在GAE上部署了一个数据库，用来存放一些数据，之前的文章中有提到如何在GAE上使用数据库。</p>

<h3 id="a-hrefblog20130531sql-like-at-gaegaesqla"><a href="http://j0x7c4.github.io/blog/2013/05/31/SQL-like-at-GAE">在GAE上使用类SQL语句进行查询</a></h3>

<h3 id="a-hrefblog20130531database-at-gaegaedatabasea"><a href="http://j0x7c4.github.io/blog/2013/05/31/database-at-GAE/">在GAE上使用Database</a></h3>

<p>下面这个例子是一张Inverted_index表中，存2个字段，并且实现两个方法去获取资料：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">google.appengine.ext</span> <span class="kn">import</span> <span class="n">db</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Inverted_index</span> <span class="p">(</span> <span class="n">db</span><span class="o">.</span><span class="n">Model</span> <span class="p">):</span>
</span><span class="line">	<span class="nb">id</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">IntegerProperty</span><span class="p">()</span>
</span><span class="line">	<span class="n">word</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">StringProperty</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">	<span class="k">def</span> <span class="nf">get</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span><span class="line">		<span class="k">if</span> <span class="ow">not</span> <span class="n">kwargs</span><span class="o">.</span><span class="n">keys</span><span class="p">():</span>
</span><span class="line">			<span class="n">q</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class="line">			<span class="k">return</span> <span class="p">[</span> <span class="p">{</span><span class="s">&quot;id&quot;</span><span class="p">:</span><span class="n">item</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="s">&quot;word&quot;</span><span class="p">:</span><span class="n">item</span><span class="o">.</span><span class="n">word</span> <span class="p">}</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">q</span> <span class="p">]</span>
</span><span class="line">		<span class="k">if</span> <span class="s">&#39;ids&#39;</span> <span class="ow">in</span> <span class="n">kwargs</span><span class="p">:</span>
</span><span class="line">			<span class="n">ids_set</span> <span class="o">=</span> <span class="s">&#39;,&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">kwargs</span><span class="p">[</span><span class="s">&#39;ids&#39;</span><span class="p">]))</span>
</span><span class="line">			<span class="n">q</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">GqlQuery</span><span class="p">(</span><span class="s">&quot;SELECT * FROM Inverted_index WHERE id in (</span><span class="si">%s</span><span class="s">)&quot;</span><span class="o">%</span><span class="p">(</span><span class="n">ids_set</span><span class="p">))</span>
</span><span class="line">			<span class="k">return</span> <span class="nb">dict</span><span class="p">(</span><span class="nb">zip</span><span class="p">([</span><span class="nb">int</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">id</span><span class="p">)</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">q</span><span class="p">],[</span><span class="n">item</span><span class="o">.</span><span class="n">word</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">q</span><span class="p">]))</span>
</span><span class="line">		<span class="k">if</span> <span class="s">&#39;words&#39;</span> <span class="ow">in</span> <span class="n">kwargs</span><span class="p">:</span>
</span><span class="line">			<span class="n">words_set</span> <span class="o">=</span> <span class="s">&#39;,&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">kwargs</span><span class="p">[</span><span class="s">&#39;words&#39;</span><span class="p">]))</span>
</span><span class="line">			<span class="n">q</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">GqlQuery</span><span class="p">(</span><span class="s">&quot;SELECT * FROM Inverted_index WHERE word in (</span><span class="si">%s</span><span class="s">)&quot;</span><span class="o">%</span><span class="p">(</span><span class="n">words_set</span><span class="p">))</span>
</span><span class="line">			<span class="k">return</span> <span class="nb">dict</span><span class="p">(</span><span class="nb">zip</span><span class="p">([</span><span class="n">item</span><span class="o">.</span><span class="n">word</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">q</span><span class="p">],[</span><span class="nb">int</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">id</span><span class="p">)</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">q</span><span class="p">]))</span>
</span><span class="line">		
</span><span class="line">
</span><span class="line">	<span class="k">def</span> <span class="nf">get_id_list_by_doc</span> <span class="p">(</span> <span class="bp">self</span><span class="p">,</span> <span class="n">word_list</span> <span class="p">):</span>
</span><span class="line">		<span class="n">word_to_id</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">words</span><span class="o">=</span><span class="n">word_list</span><span class="p">)</span>
</span><span class="line">		<span class="k">return</span> <span class="p">[</span><span class="n">word_to_id</span><span class="p">[</span><span class="n">word</span><span class="p">]</span> <span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">word_list</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="gae">另外介绍个可以部署在GAE的分词器</h2>

<p>这个分词器用纯python来写，网上看到很多人都推荐。</p>

<p><a href="https://github.com/fxsjy/jieba">https://github.com/fxsjy/jieba</a></p>

<p>但是部署在GAE上需要修改一个地方，不然可能会出错：
将<code>jieba</code>中的<code>__init__.py</code>的78-81行修改成这样。因为如果使用原来的系统临时文件夹来存放cache文件，会出错。于是我直接把存放cache的目录设置成当前目录。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">if</span> <span class="n">abs_path</span> <span class="o">==</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">_curpath</span><span class="p">,</span><span class="s">&quot;dict.txt&quot;</span><span class="p">):</span> <span class="c">#defautl dictionary</span>
</span><span class="line">    <span class="n">cache_file</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s">&#39;.&#39;</span><span class="p">,</span><span class="s">&quot;jieba.cache&quot;</span><span class="p">)</span>
</span><span class="line"><span class="k">else</span><span class="p">:</span> <span class="c">#customer dictionary</span>
</span><span class="line">    <span class="n">cache_file</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s">&#39;.&#39;</span><span class="p">,</span><span class="s">&quot;jieba.user.&quot;</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="nb">hash</span><span class="p">(</span><span class="n">abs_path</span><span class="p">))</span><span class="o">+</span><span class="s">&quot;.cache&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在使用上，可以调用<code>jieba.cut</code>，也可以调用<code>jieba.finalseg.cut</code>，两者的区别还没仔细研究，但是如果在GAE上使用前者的话，会出现内存使用过大，然后被系统kill掉进程的问题。用后者就没问题了。具体例子如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">import</span> <span class="nn">sys</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">webapp2</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">jieba</span> <span class="kn">import</span> <span class="n">finalseg</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Segment</span><span class="p">(</span><span class="n">webapp2</span><span class="o">.</span><span class="n">RequestHandler</span><span class="p">):</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="n">text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;text&#39;</span><span class="p">)</span>
</span><span class="line">        <span class="n">seg_list</span> <span class="o">=</span> <span class="n">finalseg</span><span class="o">.</span><span class="n">cut</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span><span class="line">        <span class="n">text</span> <span class="o">=</span> <span class="s">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">seg_list</span><span class="p">)</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">response</span><span class="o">.</span><span class="n">headers</span><span class="p">[</span><span class="s">&#39;Content-Type&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;text/plain&#39;</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">response</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">post</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="n">text</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;text&#39;</span><span class="p">)</span>
</span><span class="line">        <span class="n">seg_list</span> <span class="o">=</span> <span class="n">finalseg</span><span class="o">.</span><span class="n">cut</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span><span class="line">        <span class="n">text</span> <span class="o">=</span> <span class="s">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">seg_list</span><span class="p">)</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">response</span><span class="o">.</span><span class="n">headers</span><span class="p">[</span><span class="s">&#39;Content-Type&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;text/plain&#39;</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">response</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">app</span> <span class="o">=</span> <span class="n">webapp2</span><span class="o">.</span><span class="n">WSGIApplication</span><span class="p">([</span>
</span><span class="line">    <span class="p">(</span><span class="s">&#39;/api/segment&#39;</span><span class="p">,</span> <span class="n">Segment</span><span class="p">),</span>
</span><span class="line">    <span class="p">],</span><span class="n">debug</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>以上比较粗略的介绍了一下在网上利用免费资源搭建web app的方法。最近在鼓捣一个跟微博相关的东西，我就是利用了HEROKU和GAE来实现的。
###啊! 微博 <a href="http://rweibo.herokuapp.com/">http://rweibo.herokuapp.com/</a>
因为app还没上线，所以需要有将微博账号添加到app的测试账号中才能使用。想要尝试的话，可以私聊~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]当还是不当女生的心情垃圾桶]]></title>
    <link href="http://j0x7c4.github.io/blog/2013/11/23/emotion-trash/"/>
    <updated>2013-11-23T00:19:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2013/11/23/emotion-trash</id>
    <content type="html"><![CDATA[<p>這是一篇分享自ptt的文章，很值得一看，特別是對那些總是追不到女生卻又很想討好女生的男生。</p>

<p>作者根據一個網友的問題，逐一解釋，看了真是受益匪淺。</p>

<p>文章有點長，但是看了受益匪淺。</p>

<blockquote>
  <p>作者: abcd0 (貓舌茉莉卡)</p>

  <p>看板: CATCH</p>

  <p>標題: Re: [請益] 好朋友，告白失敗被拒</p>

  <p>時間: Sun Nov 17 03:50:23 2013</p>
</blockquote>

<hr />

<blockquote>
  <p>對方個性及狀況簡述:
個性活潑大方，不少人追，外表是會惹人搭訕的女生</p>

  <p>大一到大三都跟一個劈腿男(垃圾!幹)</p>

  <p>在一起很痛苦後來在</p>

  <p>大三時終於看清分手後來回家鄉補習念書，大四幾乎都不在學校大四在補習班時，曾短暫跟某男交往1個月，後來發現根本不喜歡他冷處理後，提分手</p>
</blockquote>

<p>你知道這代表什麼嗎?</p>

<p>這代表這個女生在感情上的心態有問題</p>

<p>還有,從你那麼痛恨那位劈腿男的狀況來看</p>

<p>你已經將這位女生視為你的真命天女了</p>

<p>所以才會痛恨任何曾經傷害過她的人</p>

<p>這種心態(把她當真命天女)會嚴重阻礙你追求她</p>

<!-- more -->

<hr />
<blockquote>
  <p>1.問題背景:</p>

  <p>彼此關係</p>

  <p>彼此剛認識後沒多久，因為一同組隊參與一個比賽變得很熟</p>

  <p>女生在大三分手的痛苦期，我陪著她走過，給予鼓勵跟支持</p>
</blockquote>

<p>你遇到的這個狀況,很經典,很常見,傷了許多純情男的心</p>

<p>這個狀況,我把它叫做[心情垃圾桶]</p>

<p>首先,你要知道一件重要的事</p>

<p>[女生,是不會讓自己心怡的對象,知道自己太多缺點的]</p>

<p>所以女生在跟心怡對象約會前,會精心打扮</p>

<p>所以女生在遇到心怡對象時,會盡力隱藏自己不好的一面</p>

<p>而反過來說,當一個男性知道了一個女性太多的缺點時</p>

<p>這個女生將難以對這個男生動心</p>

<p>接著,我再談談男女發洩壓力的不同之處</p>

<p>男人受到委屈時,常常只要找幾個同性友人,出去喝點酒</p>

<p>什麼都不用說,友人拍拍你的肩,這樣就夠了</p>

<p>女人不同,女人總是會找個情緒的發洩口</p>

<p>將自己拉理拉雜的情緒一股腦全說出口</p>

<p>女人並不是要徵求意見,她只是要一個[傾聽對象]而已</p>

<p>而這個傾聽對象,可以是同性,可以是異性,可以是玩偶</p>

<p>但是,重點來了</p>

<p>結合上述兩點後,你會發現一個可怕的事實</p>

<p>[如果你被某個女生當成心情垃圾桶,那她喜歡上你的機率會大幅下降]</p>

<p>因為你知道她太多不好的一面了</p>

<p>更糟糕的是,很多男生會誤解這種情況</p>

<p>以為女生對自己”敞開心房”了,喜歡上自己了</p>

<p>但事實上,女生只是把男生當成心情垃圾桶</p>

<p>而如果這些心情垃圾桶因為錯估形式,而向女生告白了呢??</p>

<p>女生會懲罰這些心情垃圾桶,會講出類似下面的句子</p>

<p>[我們不是超級好的朋友嗎?你怎麼可以這樣喜歡上我?]</p>

<p>[我們比較適合當朋友,你別破壞這種關係]</p>

<p>[你不要一直講這種事,再講我要生氣了]</p>

<p>反正,就是一直強調與男生之間的”友誼”</p>

<p>並且試圖安撫心情垃圾桶</p>

<p>[你值得更好的女生啦] [我覺得我們這樣當朋友就很好啦~]</p>

<p>[我們要當一輩子的好朋友喔]</p>

<p>這裡有一點要強調一下</p>

<p>女生其實不是故意這樣做的,這是女生的天性,讓她們不自主的做出這樣的事</p>

<p>也就是說,女生其實真的是”不帶任何惡意的”</p>

<p>請不要誤解女生,以為女生都很惡劣,把人當心情垃圾桶之後還玩弄對方</p>

<p>女生的天性,就是需要一個情緒的出口,而且絕不會喜歡上他</p>

<p>而女生的天性,就是會去保有這個出口</p>

<p><strong>__</strong><strong>____內容有夠長,又夠多的分格線</strong><strong>__</strong>_____</p>

<p>但是,這裡有個弔詭的地方:</p>

<p>很多男生會說[可是我以前女朋友也整天對我吐苦水啊]</p>

<p>這個一點也沒錯….</p>

<p>女生的天性,是會尋找情緒出口沒錯</p>

<p>而這個情緒出口,最優先的選擇,是女生認定的”伴侶”</p>

<p>也就是”男朋友” “老公”</p>

<p>如果不存在”男友” “老公”時,才會從”異性朋友”下手</p>

<p>也就是說,當你升級成”男友”或”老公”時</p>

<p>你同時也會自動成為[心情垃圾桶]</p>

<p>但這時成為心情垃圾桶是無害的,因為女生已經傾心於你了</p>

<p>所以你大可放心當女生的心情垃圾桶</p>

<p>其實做女生的心情垃圾桶也沒啥不好</p>

<p>只要你沒有打算追求這女生,那你大可放心當心情垃圾桶</p>

<p>因為成為心情垃圾桶,你跟這個女生的友誼會迅速發展</p>

<p>直到她找到下一任男友為止</p>

<p>找到下一任男友後,男友就會接手你的心情垃圾桶位置</p>

<p>女生就會開始疏遠你</p>

<p>等到分手了,才會又將你提升回心情垃圾桶的位置</p>

<p>也就是說!!!當你跟女生還不是男女朋友時,而你又想追這個女生時</p>

<p>如果遇到女生要跟你吐苦水的話,請立刻阻止她!!!!</p>

<p>一旦你在女生對你動心前,就成為女生的吐苦水對象</p>

<p>那你將被女生打入[不會對你動心]的一族</p>

<p>這就是女生常說的[我們太熟悉了,反而不會在一起]</p>

<p>因為你已經聽了太多女生的苦水,知道太多不該知道的事了</p>

<p>那要怎麼阻止女生吐苦水呢??</p>

<p>你可以婉轉的說[xxx,我知道這些事讓你很痛苦,但我們應該向前看,不該陷在裡面]</p>

<p>然後避開女生想聊的,受委屈的話題</p>

<p>改聊一些能帶給女生正面情緒的話題</p>

<p>女生一旦想吐苦水,能躲多遠就躲多遠</p>

<p>放心,生命會自己找出路</p>

<p>女生找不到你這個心情垃圾桶,自然會去找另一個</p>

<p>更好玩的是,當女生把另一個男生當成心情垃圾桶後</p>

<p>反而會讓你追到這個女生的機會上升~~~</p>

<p>因為女生吐完水了,準備重新再出發</p>

<p>你不是心情垃圾桶,你會是女生考慮[再出發]的對象之一</p>

<p>這就是許多純情男最痛恨的狀況</p>

<p>[安慰情殤女安慰了老半天,好不容易安慰好了,結果女生又跟別人交往了]</p>

<p>[交往沒多久,女生又情殤,又跑來找純情男安慰吐苦水]</p>

<p>[安慰情殤女安慰了老半天,好不容易安慰好了,結果女生又跟別人交往了]</p>

<p>無窮迴圈,無間地獄…………</p>

<p>那~~遇到情殤的女生,到底該怎麼辦??</p>

<p>答案其實在某部電影裡演的很詳盡</p>

<p>大陸電影: 失戀33天</p>

<p><strong>__</strong><strong>__</strong><strong><em>到底要寫多久才能寫完啊</em></strong><strong>__</strong><strong>__</strong>_</p>

<p>電影裡面,女主角被劈腿</p>

<p>男主角從頭到尾沒有聽女主角吐苦水,沒有安慰她,沒有罵她[妳不能再這樣下去]</p>

<p>更沒有宣示[我一定要把你從痛苦中拯救出來]</p>

<p>這些純情男最愛對情殤女生做的事,男主角一項也沒做</p>

<p>他只有逗笑女生,做讓她開心的事</p>

<p>讓女主角在不知不覺中,發現自己其實已經放下了</p>

<p>拯救情殤女,其實就跟攻打城池一樣</p>

<p>情殤的女性,總是會築起高高的城堡,把自己關在裡面</p>

<p>關到受不了,探出頭來找心情垃圾桶吐一吐苦水,吐完後再縮進城堡裡面</p>

<p>如果你對城主嗆聲[我一定要打破你這座城!!]
                 (我一定要拯救妳走出情殤)</p>

<p>你覺得城主會做什麼動作?? 加強防禦? 還是告訴你哪邊比較好進攻???</p>

<p>正確的方式,是把女生騙出心房,讓她在沒查覺的情形下走出來</p>

<p>等她查覺時,會發現,其實自己早就已經走出來了</p>

<p>就跟[失戀33天]裡 男主角王小賤做的事一模一樣</p>

<p><strong>__</strong><strong>__</strong><strong>總算要進到結論了</strong><strong>__</strong><strong>__</strong><em>__</em></p>

<p>結論:</p>

<p>如果你還不是女生的男友,當女生找你吐苦水時,請堵住她的出口</p>

<p>轉移話題,聊些快樂的事,讓女生找別人去聊傷心事</p>

<p>躲開成為心情垃圾桶的陷阱</p>

<p>如果你要拯救情殤女,先去看失戀33天這部片</p>

<p>了解原理後,避開成為心情垃圾桶的可能</p>

<p>誘騙她走出心中的城堡,方能成功</p>

<blockquote>
  <p>後來大四時在家鄉補習念書偶爾來學校，我都會陪她走走  </p>

  <p>她考試的東西我科系略有涉及，所以也會給予建議跟討論</p>

  <p>平常LINE跟FB、簡訊、電話都有連絡</p>

  <p>在今年考試前的一段時間，我跟她都是很好的朋友</p>
</blockquote>

<hr />
<blockquote>
  <p>告白前錯估情勢</p>

  <p>我以為我自己在她心中不只是很好的朋友</p>

  <p>研究所放榜時，A大學落榜了，她出現在我面前安慰我</p>

  <p>B大學放榜時，我上了，也是她第一個打給我的</p>

  <p>大四時，她偶爾來學校，幾乎都是我陪她，也常常單獨出去吃飯</p>

  <p>考試前她生日，我騎三小時車，送蛋糕跟唱生日快樂歌給她聽</p>

  <p>她非常開心。</p>

  <p>畢業後有次她回學校，單獨跟我睡我宿舍(只不過是樓中樓，我睡樓上她睡樓下)</p>

  <p>當天聊到三更半夜，會問我說怎麼不交個女朋友(我含糊帶過就是了)</p>
</blockquote>

<p>通常女生都會很希望心情垃圾桶趕快去交個女友</p>

<p>這也是女生的一種溫柔表現</p>

<p>[交了女友後,他應該就不會喜歡上我了吧,我們就能維持這種正常友誼了]</p>

<blockquote>
  <p>不過我忽略了</p>

  <p>她曾說過喜歡學長型的，勝過同屆</p>

  <p>她覺得我們真的是很好的朋友</p>

  <p>生日那天她在我離開後，簡訊我說：「真的是超級好朋友，拜把兄弟了啦!」</p>

  <p>(我以為她知道我喜歡她，本已死心，但居然回學校還敢跟我單獨睡一間，想說還有機會，殊不知……)</p>
</blockquote>

<p>她絕對知道,女人的心思細膩,直覺準確</p>

<p>她是看準你不敢告白,她是捨不得放棄一個這麼好的朋友,這麼棒的心情垃圾桶</p>

<blockquote>
  <p>她不常主動找我，LINE、FB快則當天回，慢則1周才回
 她現在想專心在考試上面。</p>

  <p>2.目前狀況:</p>

  <p>告白時及之後的情況：</p>

  <p>昨天我坐火車去找她，</p>

  <p>以拿書給她的名，行去她家附近玩之實</p>

  <p>她最近閉關念書很少赴約了，知道我是要去玩也肯陪我</p>

  <p>我以為我很有機會，打算一舉成擒，殊不知是壯士斷腕，嗚呼哀哉，甚悲矣</p>

  <p>這幾天醞釀了滿久的，後來當天先去走走去吃飯，再到山上看風景的時候</p>

  <p>我開口告白了</p>

  <p>「妳不是問我說怎麼不交女朋友嗎，其實我喜歡一個女生很久了」</p>

  <p>『真的假的，是誰阿?』</p>

  <p>「我想打電話跟她告白，妳可以給我支持嗎?」(牽她的手)</p>

  <p>『真的假的，是誰阿?』</p>

  <p>「打電話是不是很沒誠意，當面講比較好齁?」</p>

  <p>『恩，對啦，所以是誰啊』</p>

  <p>「我喜歡…妳，OOO我喜歡妳，當我女朋友吧」</p>

  <p>『靠，真的假的阿，我不要拉』</p>

  <p>「靠要，那你聽我講完啦」</p>

  <p>然後就是說我有多喜歡她，我知道她要考試可能會打擾她</p>

  <p>但是我可以陪她度過這一年，一起加油等等</p>

  <p>她拒絕我</p>

  <p>基本上是：</p>

  <ol>
    <li>
      <p>我們是好朋友，根本沒想過這種事情啦 (我以為她知道我喜歡她)</p>
    </li>
    <li>
      <p>她要考試，現在不想交男朋友</p>
    </li>
    <li>
      <p>何德何能阿~快去找別的女生吧</p>
    </li>
  </ol>

  <p>後來看完風景還是去吃了個晚餐</p>

  <p>她送我去車站之後，她跟我說，欸，當好朋友啦</p>

  <p>我就笑了一下不答，轉頭就走了</p>

  <p>後來今天下午傳封簡訊跟她說，書大概要怎麼看，然後貼了個考試心得給她</p>

  <p>至今尚未回我，但我猜應該不會回了</p>
</blockquote>

<p>不,會回,只要你願意乖乖回去蹲,當一個認命的心情垃圾桶</p>

<p>那女生就會跟你重新回到像以前一樣那麼要好</p>

<p>但是,要是你膽敢再次對女生產生非份之想</p>

<p>她就會再次疏遠你</p>

<blockquote>
  <p>現在想想，我應該再陪她這一年，讓她感受到我的重要，進而日久生情的</p>

  <p>只不過我也是事後才知道她根本把我當好朋友，沒想過這問題。</p>

  <p>唉= =</p>
</blockquote>

<p>錯誤,再3年也一樣</p>

<p>心情垃圾桶當一輩子,女生也不會動心</p>

<p>但是會變成女生一輩子的好朋友</p>

<blockquote>
  <p>3.我的疑問:</p>

  <p>坦白說我不想放棄，這個女生真的很棒</p>

  <p>錯過她我會非常後悔</p>

  <p>請問現階段該如何是好</p>

  <p>版上的心得及建議我大多有爬過</p>

  <p>可是我這個是滿久的朋友，而且我應該是她身邊最靠近的人</p>

  <p>我不曉得是否就該如此離開</p>

  <p>小弟我約略整理出下面四種：</p>

  <p>1.冷處理過一兩個月再說，再改採下列 2 3 4</p>

  <p>讓自己冷靜一點，說不定可以放下</p>

  <p>2.不透過出追的氛圍的保持聯絡，關心她，透過課業科目保持聯繫</p>

  <p>「最近書念得怎樣?」 「OO科有沒有甚麼問題」「欸，這題妳會嗎，我的答案是OOXX」</p>

  <p>「今天過得怎樣」等等</p>

  <p>3.嗆明不追了，然後保持關心，透過課業科目保持聯繫</p>

  <p>「靠杯，失敗了，不過就這樣啦，哈哈哈哈，(然後關心她進度如何之類的)」</p>

  <p>4.繼續正攻，除了關心保持聯繫，偶爾上去找她、送送禮物</p>

  <p>「沒關係，我不會放棄的，我要追妳~~~(沈玉琳調調)」</p>

  <p>唉，請問該如何是好呢，各位大大!!</p>
</blockquote>

<p>基本上這個局你已經做壞了= =</p>

<p>女生已經吐了苦水了,自我揭示了,讓你知道她不好的一面了</p>

<p>這些都是阻礙她對你動心的要素</p>

<p>追別的女生,會比較簡單</p>

<p>你真的還是要追,那請參考王小賤的做法</p>

<p>避開女生吐苦水,讓她找別人吐苦水去</p>

<p>你只要負責帶給女生快樂就好</p>

<p>至於聽女生”敞開心房”這種事,讓下一任心情垃圾桶去做</p>

<p>同時提升自己,讓自己以另一個嶄新的形象重新出現在她眼前</p>

<p>讓她覺得你變成完全不一樣的人了</p>

<p>就算這些都做了,還是很可能失敗</p>

<p>因為這局開局就已經做壞了啦…</p>

<p>你還是放棄,乖乖做女生的好友比較輕鬆…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[归属感]]></title>
    <link href="http://j0x7c4.github.io/blog/2013/11/18/homeless/"/>
    <updated>2013-11-18T00:12:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2013/11/18/homeless</id>
    <content type="html"><![CDATA[<p>刚想写些东西，正在播的音乐刚好跳出五月天的《回来吧》，这真的是个巧合。</p>

<blockquote>
  <p>回来吧，难道你不怀念吗。。。</p>
</blockquote>

<blockquote>
  <p>回来吧，我还一直在等啊。。。</p>
</blockquote>

<p>我来自一个小城市，现在为了自己一点点的事业心，在大城市尝试着自己并不强大的生存能力。坦白说我为什么一定要在这个城市工作，我自己也找不出一个能说服自己的理由。为了事业？为了女人？为了朋友？还是离家比较近？</p>

<p>不少身边的人也问我为什么回国工作，为什么不去美国，为什么不继续读学位？其实我是一个特别不想寂寞的人，刚开始工作那个月，一下班就不知道干什么，整个人就空了。同事都跟我说再见，然后各自回家。幸好我在这里也有些朋友，偶尔也可以找他们吃吃饭，聊聊天。可是吃完饭，聊完天，回到租的“家”，又是一个人。不去美国，不去其他城市，而是回到经历过大学四年的地方，就是幻想着能够把“韩国的故事”继续，能够在这里有更多的朋友作伴。因为我熟悉这里，可是熟悉一个地方，并不代表就有归属感。</p>

<p>在台湾两年，却没体会过太多的寂寞，这也多亏我能遇到志趣相投的好基友。当心情低落时，总能有人陪你喝酒，一直喝到天亮，喝到大家都醉了，然后互相搀扶着回去，醉到回房间连门都不关直接倒在床上睡。那时候不怕心里郁闷，因为总有人会跳出来一起解闷。做任何外人看着很疯狂的事，都会有人陪你，支持你。比如一次叫了20多个并不太熟，有些甚至都叫不出名字的妹子来一起烤肉；超过30多个小时不睡觉一起从高雄开车到垦丁沙滩跨年，睡同一个帐篷。</p>

<p><b>感谢科科，坤坤，承恩。</b></p>

<p>一个人的生活也可以改变以往的习性，时间久了，我竟然开始看书了。以前只把书当装饰品的我，竟然开始看书了；几年前的我，还是一个没心没肺没有心里情感的人，现在心里的想法多的都藏不住，只好用文字写在博客上来宣泄。</p>

<p><b>喝掉一罐啤酒继续，现在正在播的音乐换成了”Wake me up when september ends”，这音乐竟然也懂我的心情</b></p>

<p>也许年轻时总是喜欢跟自己过不去，明明对方对你没感觉，却一再认为这是一种考验。难道这就叫做“年少轻狂”吗？既然自己无法分辨是真的“没感觉”，还是一种“考验”，那就当时一种考验吧。</p>

<p><b>好吧，我真的服了itunes了，现在正在播《独处的时候》，晚安</b></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Terminal中显示git的当前branch]]></title>
    <link href="http://j0x7c4.github.io/blog/2013/11/16/show-git-branch-name/"/>
    <updated>2013-11-16T01:05:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2013/11/16/show-git-branch-name</id>
    <content type="html"><![CDATA[<p>不知道有没有人和我有同样的困扰，在使用git的时候不小心改到了master分支上的代码，然后还不小心push了，结果还成功push了，而且自己还没发觉是push到了master上。如果代码正确还好，一旦代码有些问题就会引来很大麻烦。</p>

<p><img src="http://j0x7c4.github.io/images/blog/show-git-branch-name.png" /></p>

<p>mac的terminal上并没有自带功能显示当前的分支，所以需要自己手动修改bash的显示方式。如图上所示，新建一个<code>qrl</code>的目录，初始化<code>git</code>，当<code>commit</code>之后会产生<code>.git</code>的目录，从<code>.git</code>中获取当前的分支名字。</p>

<p>实现起来比较容易，在.bash_profile中加入下面的代码就可以了。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">parse_git_branch<span class="o">()</span> <span class="o">{</span>
</span><span class="line">    git branch 2&gt; /dev/null | sed -e <span class="s1">&#39;/^[^*]/d&#39;</span> -e <span class="s1">&#39;s/* \(.*\)/ [\1]/&#39;</span>
</span><span class="line"><span class="o">}</span>
</span><span class="line"><span class="nb">export </span><span class="nv">PS1</span><span class="o">=</span><span class="s2">&quot;\u@\h \W\[\033[32m\]\$(parse_git_branch)\[\033[00m\] $ &quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>对于PS1的参数可以参考下面的来写
&gt;\d ：代表日期</p>

<blockquote>
  <p>\H ：完整的主机名称</p>
</blockquote>

<blockquote>
  <p>\h ：仅取主机的第一个名字</p>
</blockquote>

<blockquote>
  <p>\t ：显示时间为24小时格式，如：HH：MM：SS</p>
</blockquote>

<blockquote>
  <p>\T ：显示时间为12小时格式</p>
</blockquote>

<blockquote>
  <p>\A ：显示时间为24小时格式：HH：MM</p>
</blockquote>

<blockquote>
  <p>\u ：当前用户的账号名称</p>
</blockquote>

<blockquote>
  <p>\v ：BASH的版本信息</p>
</blockquote>

<blockquote>
  <p>\w ：完整的工作目录名称。家目录会以 ~代替</p>
</blockquote>

<blockquote>
  <p>\W ：利用basename取得工作目录名称，所以只会列出最后一个目录</p>
</blockquote>

<blockquote>
  <p># ：下达的第几个命令</p>
</blockquote>

<blockquote>
  <p>\$ ：提示字符，如果是root时，提示符为：# ，普通用户则为：$</p>
</blockquote>

<h3 id="section">参考</h3>
<p><a href="http://martinfitzpatrick.name/article/add-git-branch-name-to-terminal-prompt-mac">http://martinfitzpatrick.name/article/add-git-branch-name-to-terminal-prompt-mac</a>
<a href="http://blog.sina.com.cn/s/blog_610913ea0100fce1.html">http://blog.sina.com.cn/s/blog_610913ea0100fce1.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime Text 备忘]]></title>
    <link href="http://j0x7c4.github.io/blog/2013/11/13/sublime-text2-tutorial/"/>
    <updated>2013-11-13T11:33:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2013/11/13/sublime-text2-tutorial</id>
    <content type="html"><![CDATA[<p>Sublime Text 是个很不错的文本编辑工具，已经使用1年多了。这里整理一些关于Sublime的使用方法，防止以后忘记。</p>

<h2 id="package">在线安装Package</h2>
<p>###安装Package Control
+ 用 Ctrl+` 打开Console
+ 在console中加入下面这段脚本</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">import</span> <span class="nn">urllib2</span><span class="o">,</span><span class="nn">os</span><span class="p">;</span><span class="n">pf</span><span class="o">=</span><span class="s">&#39;Package Control.sublime-package&#39;</span><span class="p">;</span><span class="n">ipp</span><span class="o">=</span><span class="n">sublime</span><span class="o">.</span><span class="n">installed_packages_path</span><span class="p">();</span><span class="n">os</span><span class="o">.</span><span class="n">makedirs</span><span class="p">(</span><span class="n">ipp</span><span class="p">)</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">ipp</span><span class="p">)</span> <span class="k">else</span> <span class="bp">None</span><span class="p">;</span><span class="nb">open</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">ipp</span><span class="p">,</span><span class="n">pf</span><span class="p">),</span><span class="s">&#39;wb&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">urllib2</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="s">&#39;http://sublime.wbond.net/&#39;</span><span class="o">+</span><span class="n">pf</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39; &#39;</span><span class="p">,</span><span class="s">&#39;%20&#39;</span><span class="p">))</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>重新打开sublime</li>
</ul>

<h3 id="package-control">用Package Control安装插件</h3>
<ul>
  <li><code>Command+Shift+p</code>打开命令面板(如果非mac就用<code>Ctrl</code>代替<code>Command</code>)</li>
  <li>输入<code>install</code>打开Install Package</li>
  <li>选择需要的插件安装</li>
</ul>

<h3 id="repository">添加Repository</h3>
<p>想要使用更多的插件，可以自行添加网上的repository，比如github.</p>

<ul>
  <li><code>Command+Shift+p</code>打开命令面板</li>
  <li>选择<code>package Control:Add Repository</code></li>
  <li>然后在底下的Repository URL中填入github地址，比如<a href="https://github.com/freewizard/SublimeFormatSQL">https://github.com/freewizard/SublimeFormatSQL</a></li>
  <li>最后再选择<code>install package</code>来安装插件</li>
</ul>

<h3 id="section">常用插件</h3>
<ul>
  <li>SublimeFormatSQL <a href="https://github.com/freewizard/SublimeFormatSQL">https://github.com/freewizard/SublimeFormatSQL</a></li>
</ul>

<h3 id="section-1">备注</h3>
<ul>
  <li>SublimeFormatSQL的最新版对Sublime Text 2的兼容性有点问题，我用朋友给的旧版本就可以了。具体issue参见<a href="https://github.com/freewizard/SublimeFormatSQL/issues/14">https://github.com/freewizard/SublimeFormatSQL/issues/14</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在日本——列車上的妹子]]></title>
    <link href="http://j0x7c4.github.io/blog/2013/11/08/in-japan-1/"/>
    <updated>2013-11-08T00:20:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2013/11/08/in-japan-1</id>
    <content type="html"><![CDATA[<p><img src="http://maps.googleapis.com/maps/api/staticmap?size=640x400&amp;maptype=roadmap&amp;markers=size:large%7Ccolor:blue%7C河口湖%7C&amp;zoom=10&amp;sensor=false" /></p>

<p>去河口湖，從橫濱站搭電車，需要換乘4趟列車，总共需要3个多小时。從橫濱到Hachioji就要坐1個多小時，原本以為會在車上無聊的度過，沒想到注意力就被一個戴口罩的妹子吸引走了。</p>

<p>她沒有塗很濃的妝，甚至還能看到額頭的痘痘，这与之前见到的日本妹子不同，大多数人都是化了很精致的妆。我為了不讓自己的視線一直聚焦在她身上而引起尷尬，拿出kindle繼續看書。大概過了幾分鐘，終於她對面的座位空了出來，可以有機會從正面觀察她。我一直想拿出手機拍下這激動的瞬間，可是想到這對她是種不尊重，就不停說服自己不要這樣做。</p>

<p>她一開始是在看手機，後來從包包中拿出一本書和一本記事本，書名是日文写的，其中几个汉字是“實用”，“中级”，“中國話”。竟然是在學中文，我腦海中立刻浮現出各種上前搭訕的情景——“口你几哇”，“你好，你是在学中文吗”，真想把昨天凌晨自己从新宿走回酒店的事情告诉她。可是这些僅僅是停留在腦子裡，天生不擅和女生講話的缺陷再次暴露了。於是我還是默默的看書，她也是默默的看書。其間有幾次目光的交匯，隱約的感到她貌似也想開口講話，也是因為害羞吧。</p>

<p>车外还在下雨，窗户上起了雾，也看不清外面的画面，目光还是主要集中在她身上。终于，她翻完了笔记本，把书和记事本塞回包包里，开始眯起眼睛来小睡。不知道她会坐到哪一站，不知道她会不会也是去河口湖，不知道她她是否注意到對面有個屌絲一直在YY她。沒過多久，車再次進站，這次她起身，整了整衣服，下車了。這麼多次旅行中看到的人都是這樣，事先不知是否和她相遇，事後不知何時與她分別。</p>

<!--more-->

<h2 id="ps">PS</h2>
<p>日本近几年对<code>痴汉</code>行为抓的很严，不能随意对日本的女孩进行拍照，特别是在电车，地铁上。只要有妹子向警察指正你对她有痴汉行为，比如拍照，咸猪手等，一旦证据确凿，就要在日本被关上两年，无论是本国人还是外国人。所以经常看岛国爱情动作片的同学们，去了日本之后千万不要拿相机乱拍妹子。</p>

<p><img src="http://j0x7c4.github.io/images/blog/Screen-Shot-2013-11-08-at-12.54.14-AM.png" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在hive中使用python来做UDF有点糟]]></title>
    <link href="http://j0x7c4.github.io/blog/2013/11/01/udf-in-python-sucks/"/>
    <updated>2013-11-01T23:57:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2013/11/01/udf-in-python-sucks</id>
    <content type="html"><![CDATA[<p>之前写了篇介绍如何在HIVE中用python来写UDF的文字，最近终于也开始需要用UDF来处理一些数据了。</p>

<p>可是现实和理想总是存在些差距，原本想着python简洁的代码和随改随用的特性，在UDF的灵活性上显得有点苍白无力。利用<code>TRANSFORM</code>, <code>USING</code>, <code>AS</code>的结构来把python的脚本当做UDF，虽然看起来非常方便，但实际用起来却有很大问题。</p>

<h2 id="section">无法单独处理某个字段</h2>
<p>没有仔细研究过这个具体的流程，不过猜想应该是从hive中select出来的数据以pipe的形式转到python的stdin中，再把python中的stdout的内容转到hive的输出中。这样如果仅需对选出的某个字段进行处理，其余字段不进行处理的话，必须在Python脚本中注意当前要处理的字段是第几个，一旦select中的顺序有所改变，那python脚本应该就无法处理了。目前仅选一个字段出来进行处理的情况比较少，大部分都是选出好几个字段来看。所以虽然python很好，不过我还是“十动然拒”了吧。</p>

<h2 id="section-1">无法外加聚集函数</h2>
<p>在使用中，下面这种格式是很死的。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sql"><span class="line"><span class="k">SELECT</span> <span class="k">TRANSFORM</span><span class="p">(</span><span class="n">field_A</span><span class="p">,</span> <span class="n">field_B</span><span class="p">)</span> <span class="k">USING</span> <span class="s1">&#39;python foo.py&#39;</span> <span class="k">AS</span><span class="p">(</span><span class="n">field_AA</span><span class="p">,</span> <span class="n">field_BB</span><span class="p">)</span> <span class="k">FROM</span> <span class="p">...</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>比如你想再对UDF外面加一层<code>Count</code>是没有办法实现的。某人会告诉你格式不对，无法运行。但是常规的用java写的UDF是没有问题的，全部都能hold住~</p>

<h2 id="section-2">外加的吐槽</h2>
<p>实际工作中，不仅仅需要<code>UDF</code>，<code>UDAF</code>和<code>UDTF</code>都是会经常遇到的。而Python拼死只能处理UDF的情况，对于后者只能呵呵了。于是反正UDAF和UDTF还是需要JAVA来写，那UDF也就顺便用JAVA写了吧。这样代码也统一一点，便于管理。</p>

<p>所以虽然python在UDF上的效果可以实现，不过功能太过简单，实际环境下还是很无力的。接下来还是用JAVA写<code>UDF</code>,<code>UDAF</code>和<code>UDTF</code>吧。回头吧，少年~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[人生若只如初见]]></title>
    <link href="http://j0x7c4.github.io/blog/2013/10/24/first-love/"/>
    <updated>2013-10-24T22:11:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2013/10/24/first-love</id>
    <content type="html"><![CDATA[<blockquote>
  <p>人生若只如初見
何事秋風悲畫扇</p>
</blockquote>

<blockquote>
  <p>等閒變卻故人心
卻道故心人易變</p>
</blockquote>

<p>兩人相見，並沒有絲毫的躲閃，言語之間還是如同往常。真的像是认识很久的老友，我了解她，她也了解我。交谈时毫不顾忌，于是，她還是那麼欢快中带点豪爽，我還是那樣幽默中带点木讷。</p>

<p>从热恋到分手，是否就是一个从有很多话想讲，到把能讲的话都讲完的一个过程？双方发现没话讲了，于是一方说分手，另一方默认。但开始恋爱的原因，不就是觉得我们有永远讲不完的话题，永远用不完的欢笑吗？为什么当恋人非得有话要讲，聊得越多就表明爱的越多吗？在交往过程中，双方都有责任和义务和对方讲话，一旦讲不出话，沉没时，就会导致冷战的开始，觉得缘分已尽了吧，或者觉得对方变心了。反而是成了朋友之后，卸下了这份责任和义务，想讲的时候就讲，不讲也不会有人责怪。没有了压力，自然聊得轻松。</p>

<p>爱情真的能转化成友情，还是旧情人相见时互相客套的热情？双方尽量表现的不在乎，好像在说，“看吧，没有你我照样过得很好”。我只是单纯的想对她好，因为以前我对其他女生好，她会生气，现在我对她好，至少还没有人会生我的气吧。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[终于来到了厦门]]></title>
    <link href="http://j0x7c4.github.io/blog/2013/10/18/travel-to-xiamen/"/>
    <updated>2013-10-18T01:32:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2013/10/18/travel-to-xiamen</id>
    <content type="html"><![CDATA[<p>以前一直想去厦门，可是都没有机会，没有成行。后来就去了台湾。
现在从台湾回来，没想到工作还不到一个月就有机会和同事们一起去厦门旅游。我们搭某廉价航空的飞机，旅途算是有点艰辛——除了飞机晚点一个多小时不说，整趟飞行中不能把座椅后背倒下来，结果坐的脖子都僵硬了T_T</p>

<p>好在最后还是安全降落在厦门机场，来到近期被爆数据库的某家快捷酒店。到酒店已经11点半了，稍微整理了一下出来到附近的宵夜摊，在一家卖沙茶面的店里坐下了。虽然说离开台湾还不到2个月，不过现在身处一海峡之隔的厦门，真的对台湾有了一点想念。于是点了一个在台湾常吃的蚵仔煎(ou a jian)，和没有吃过的沙茶面。结果蚵仔煎和我想的差距有点大，看来隔了一条海峡，蚵仔煎出现了变种。可怕的是，价格竟然还要高于台湾的。。。</p>

<h2 id="tips">Tips</h2>

<p>除了物价过高之外，小贩的人品也很低。特别是买水果，基本上所有的小贩秤都偏重，大家在买水果之前，先要把手机放在秤上看看秤的准度。太离谱的就马上走人。如果在晚上，要当心小贩给你偷梁换柱。我们一行人在鹭江道的<b>台湾小吃街</b>门口买了水果，没想到小贩给我们秤完重量后，偷偷的换了另外一袋给我们，幸好我们人多，立刻把她识破了。然后她从一开始的客气的给我们试吃水果，立刻变的很凶的大声叫嚷。</p>

<!--more-->
<p>#游览路线
##Day 1
###鼓浪屿</p>

<p><img src="http://maps.googleapis.com/maps/api/staticmap?size=640x100&amp;maptype=roadmap&amp;markers=size:mid%7Ccolor:red%7C鼓浪屿%7C&amp;zoom=14&amp;sensor=false" /></p>

<p>本以为避开十一高峰去人会比较少，不过还是低估了厦门最有名的经典之一的鼓浪屿吸引游客的能力。看来如果十一去的话，必定是被挤出翔啊。鼓浪屿上地势高低起伏比较大，一条条曲折的小巷，从高到低，从低到高的不断延伸。巷子里有很多建筑物和小店，不少店里提供盖章留念，如果是比较文艺的游客，可以搜集这些印章。</p>

<p>在鼓浪屿上有不少有名的店，比如<code>张三疯</code>奶茶店，不过20元一杯的奶茶确实有点小贵，大多数人选择拍照留念后就走人了（后来才发现这家奶茶店的连锁挺多的，不只是在鼓浪屿上才有）。<code>黄胜记</code>的猪肉脯也不错，主要是店内提供免费的试吃，品尝一下味道不买也没有关系。在<code>黄胜记</code>旁边有家叫做<code>联邦调茶局</code>的店，他们除了卖饮料之外，还有很多的茶包和茶叶卖。起先因为名字比较独特就过去看了看，后来被正妹店员吸引进入店内仔细看看，最终被正妹店员叫帅哥之后，果断的买了一罐茶叶回去。也是在附近，有一家卖肥肠粉的店，看到排很长队，味道也不错。附近还有一家比较大的卖明信片和纪念品的店，在店内看到很多具有特色的明信片，就忍不住买了很多，写了寄给台湾的学妹(^_^)</p>

<h3 id="section">中山路步行街</h3>
<p><img src="http://maps.googleapis.com/maps/api/staticmap?size=640x100&amp;maptype=roadmap&amp;markers=size:mid%7Ccolor:red%7C中山路步行街%7C&amp;zoom=14&amp;sensor=false" /></p>

<p>中山路步行街上有很多饭馆，小吃店，服装店。。。第一天路过<code>黄则和</code>，那里的花生汤挺好喝的。在滑蛋中加入了花生，口味比较偏甜。第二天去中山路时，还去了非常有名的<code>藏足馆推拿足浴</code>，大概要排半个多小时才能有空位，而且这还是淡季。比起上海，这里的推拿价格算挺便宜了，物超所值。</p>

<p>靠近中山路的思明西路上，有一家叫<code>梦bar</code>的酒吧，应该是附近比较靠谱的一家酒吧了。来到一个城市，当然要体验一下里面的酒吧了~我一个人去酒吧，坐在靠窗的位子上，点了一杯啤酒，老板送上免费的花生，还热情的跟我聊天。老板是个魔术师，墙上挂了一些照片，不过我没让他当场show几下，因为和另一个可爱的调酒师一起喝酒玩色子会来的更有意思。</p>

<h2 id="day-2">Day 2</h2>
<p>###南普陀寺
<img src="http://maps.googleapis.com/maps/api/staticmap?size=640x100&amp;maptype=roadmap&amp;markers=size:mid%7Ccolor:red%7C南普陀寺%7C&amp;zoom=14&amp;sensor=false" /></p>

<p>本来打算是先去厦门大学的，在轮渡门口坐841路公交车就能到厦大门口。但是厦大是需要排队进入，到那里已经快11点，排队进入厦大的游客已经是相当多了。所以就决定先去南普陀寺。</p>

<p>由于我们不是特意来烧香的，所以前面的庙宇并没有用心看，直接就走上了后山。山不算太高，体力还可以的，比较轻松的就能登顶。在山顶的视野挺不错的，可以看到远处的建筑物，海，轮船。</p>

<h3 id="section-1">厦门大学</h3>
<p><img src="http://maps.googleapis.com/maps/api/staticmap?size=640x100&amp;maptype=roadmap&amp;markers=size:mid%7Ccolor:red%7C厦门大学%7C&amp;zoom=14&amp;sensor=false" /></p>

<p>厦门大学已经成为了厦门一个知名的景点了，很多游客慕名而来。厦大的美丽，让我想起了台大，同样是树木葱郁的校园，刚从校园走出来的我，又一次来到一个校园，还把自己当作是校园中的一份子。</p>

<p>厦大的芙蓉隧道真的是很惊人，里面的涂鸦充分展示了大学生的热情。喜欢拍照的话，可以在里面摆各种pose，可以把自己融入涂鸦当中去。</p>

<h3 id="section-2">环岛南路</h3>
<p><img src="http://maps.googleapis.com/maps/api/staticmap?size=640x100&amp;maptype=roadmap&amp;markers=size:mid%7Ccolor:red%7C环岛路南%7C&amp;zoom=13&amp;sensor=false" /></p>

<p>沿着环岛南路，有一片很大的沙滩，虽然海水不及台湾的清澈，沙滩看起来也比较脏。但是玩水的人还挺多的，似乎只要是海，人就会对它产生一种发自本能的喜爱。我来厦门的目的，也就是想看看海。</p>

<h3 id="section-3">曾厝垵</h3>
<p><img src="http://maps.googleapis.com/maps/api/staticmap?size=640x100&amp;maptype=roadmap&amp;markers=size:mid%7Ccolor:red%7C曾厝垵%7C&amp;zoom=13&amp;sensor=false" /></p>

<p>从沙滩上来，太阳已经下山了。沿着环岛难路，一路走到了曾厝垵。在点评上看到一家叫做<code>亚尖大排档</code>的店，有不错的评价，还有团购券，晚餐就在那里解决。菜的味道还算不错，只是上菜速度有点慢。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[试用networkx]]></title>
    <link href="http://j0x7c4.github.io/blog/2013/10/16/try-networkx/"/>
    <updated>2013-10-16T01:44:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2013/10/16/try-networkx</id>
    <content type="html"><![CDATA[<p>最近想用pagerank的方法来分析微博好友之间的权威关系，于是试着用crawler去抓微博上好友的信息，然后建立关系网络。在网上看到用networkx可以比较方便的建立关系网络，并且可以比较方便的用pagerank计算每个好友的重要性。</p>

<p>使用networks加入node和edge都很方便，并且networkx宣称他的node可以支持任何python的hashable的类型，于是我一开始使用custom的node.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">class</span> <span class="nc">user</span><span class="p">:</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">args</span><span class="p">):</span>
</span><span class="line">        <span class="k">assert</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">&#39;^[\d]+$&#39;</span><span class="p">,</span><span class="n">args</span><span class="p">[</span><span class="s">&#39;uid&#39;</span><span class="p">])</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">uid</span> <span class="o">=</span> <span class="n">args</span><span class="p">[</span><span class="s">&#39;uid&#39;</span><span class="p">]</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">info</span> <span class="o">=</span> <span class="n">args</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">__hash__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">uid</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可是这样写并不正确，他好像对自定义的类支持不太好（或许是不支持自定义类）。于是在网上查了好久，才看到要实现给一个node添加附加信息的方法。</p>

<p><a href="http://stackoverflow.com/questions/8490794/how-do-i-make-a-cutomised-object-as-a-node-for-networkx-and-how-do-i-look-it-up">http://stackoverflow.com/questions/8490794/how-do-i-make-a-cutomised-object-as-a-node-for-networkx-and-how-do-i-look-it-up</a></p>

<p>于是在加入node的时候，应该用</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">G</span><span class="o">.</span><span class="n">add_node</span><span class="p">(</span><span class="s">&quot;label&quot;</span><span class="p">,</span><span class="n">foo</span><span class="o">=</span><span class="s">&quot;foo&quot;</span><span class="p">,</span><span class="n">bar</span><span class="o">=</span><span class="s">&quot;bar&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>于是把添加node改写成</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">G</span><span class="o">.</span><span class="n">add_node</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">uid</span><span class="p">,</span><span class="n">user</span><span class="o">.</span><span class="n">info</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>添加node和edge是没问题了，结果在保存<code>gml</code>文件时又出问题了，里面的字符串竟然不支持utf-8… 官方是这么解释的：
&gt;Notes</p>

<blockquote>
  <p>GML specifications indicate that the file should only use 7bit ASCII text encoding.iso8859-1 (latin-1).</p>
</blockquote>

<blockquote>
  <p>This implementation does not support all Python data types as GML data. Nodes, node attributes, edge attributes, and graph attributes must be either dictionaries or single stings or numbers. If they are not an attempt is made to represent them as strings. For example, a list as edge data G[1][2][‘somedata’]=[1,2,3], will be 
represented in the GML file as:</p>
</blockquote>

<blockquote>
  <p><a href="http://networkx.lanl.gov/reference/generated/networkx.readwrite.gml.write_gml.html">http://networkx.lanl.gov/reference/generated/networkx.readwrite.gml.write_gml.html</a></p>
</blockquote>

<p>于是我只好抽取是ascii的编码的用户信息。然后把类的定义改写成：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">class</span> <span class="nc">user</span><span class="p">:</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">args</span><span class="p">):</span>	
</span><span class="line">        <span class="k">assert</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">&#39;^[\d]+$&#39;</span><span class="p">,</span><span class="n">args</span><span class="p">[</span><span class="s">&#39;uid&#39;</span><span class="p">])</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">uid</span> <span class="o">=</span> <span class="n">args</span><span class="p">[</span><span class="s">&#39;uid&#39;</span><span class="p">]</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">info</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;uid&#39;</span><span class="p">:</span><span class="n">args</span><span class="p">[</span><span class="s">&#39;uid&#39;</span><span class="p">],</span>\
</span><span class="line">               <span class="s">&#39;n_follows&#39;</span><span class="p">:</span><span class="n">args</span><span class="p">[</span><span class="s">&#39;n_follows&#39;</span><span class="p">],</span>\
</span><span class="line">                  <span class="s">&#39;n_fans&#39;</span><span class="p">:</span><span class="n">args</span><span class="p">[</span><span class="s">&#39;n_fans&#39;</span><span class="p">],</span>\
</span><span class="line">                <span class="s">&#39;n_weibos&#39;</span><span class="p">:</span><span class="n">args</span><span class="p">[</span><span class="s">&#39;n_weibos&#39;</span><span class="p">]}</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">__hash__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">uid</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这样终于正常创建网络，读写gml文件了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Feature Selection in R is EASY!]]></title>
    <link href="http://j0x7c4.github.io/blog/2013/10/10/new-fselector-r/"/>
    <updated>2013-10-10T23:43:00+08:00</updated>
    <id>http://j0x7c4.github.io/blog/2013/10/10/new-fselector-r</id>
    <content type="html"><![CDATA[<p>最早认识R语言是看到一本书叫做<i>“Machine Learning for Hackers”</i>, 听说R在machine learning的研究方面很有用处，就是一个专门为Machine Learning而生的语言，不过一直没用仔细研究过。在网上寻找Feature Selection方面的工具时，看到有人推荐R的package &lt;a href=http://cran.r-project.org/web/packages/FSelector/FSelector.pdf&gt;FSelector&lt;/a&gt; . 于是就载下来尝试一下，结果发现真的很方便。</p>

<h4 id="rbenchmarkiris">R可以方便的使用现成的benchmark（比如<code>iris</code>），只要一句话就可以轻松导入数据！</h4>

<p>下面是一个简单的例子使用FSelector, 采用cvs来寻找feature的子集。其中第一个参数Species~表示数据集iris中的类别(label).</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">library<span class="p">(</span>FSelector<span class="p">)</span>
</span><span class="line">data<span class="p">(</span>iris<span class="p">)</span>
</span><span class="line">subset <span class="o">&lt;-</span> cfs<span class="p">(</span>Species<span class="o">~</span>.<span class="p">,</span> iris<span class="p">)</span>
</span><span class="line">f <span class="o">&lt;-</span> as.simple.formula<span class="p">(</span>subset<span class="p">,</span> <span class="s">&quot;Species&quot;</span><span class="p">)</span>
</span><span class="line">print<span class="p">(</span>f<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>下面这个例子比较高阶，可以自己指定评价feature子集的好坏。采用best first search的策略来寻找子集。其中evaluator训练了rpart model，通过计算error rate来评价feature的好坏。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class="r"><span class="line">library<span class="p">(</span>FSelector<span class="p">)</span>
</span><span class="line">library<span class="p">(</span>rpart<span class="p">)</span>
</span><span class="line">data<span class="p">(</span>iris<span class="p">)</span>
</span><span class="line">evaluator <span class="o">&lt;-</span> <span class="kr">function</span><span class="p">(</span>subset<span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="c1">#k-fold cross validation</span>
</span><span class="line">  k <span class="o">&lt;-</span> <span class="m">5</span>
</span><span class="line">  splits <span class="o">&lt;-</span> runif<span class="p">(</span>nrow<span class="p">(</span>iris<span class="p">))</span>
</span><span class="line">  results <span class="o">=</span> sapply<span class="p">(</span><span class="m">1</span><span class="o">:</span>k<span class="p">,</span> <span class="kr">function</span><span class="p">(</span>i<span class="p">)</span> <span class="p">{</span>
</span><span class="line">    test.idx <span class="o">&lt;-</span> <span class="p">(</span>splits <span class="o">&gt;=</span> <span class="p">(</span>i <span class="o">-</span> <span class="m">1</span><span class="p">)</span> <span class="o">/</span> k<span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span>splits <span class="o">&lt;</span> i <span class="o">/</span> k<span class="p">)</span>
</span><span class="line">    train.idx <span class="o">&lt;-</span> <span class="o">!</span>test.idx
</span><span class="line">    test <span class="o">&lt;-</span> iris<span class="p">[</span>test.idx<span class="p">,</span> <span class="p">,</span> drop<span class="o">=</span><span class="kc">FALSE</span><span class="p">]</span>
</span><span class="line">    train <span class="o">&lt;-</span> iris<span class="p">[</span>train.idx<span class="p">,</span> <span class="p">,</span> drop<span class="o">=</span><span class="kc">FALSE</span><span class="p">]</span>
</span><span class="line">    tree <span class="o">&lt;-</span> rpart<span class="p">(</span>as.simple.formula<span class="p">(</span>subset<span class="p">,</span> <span class="s">&quot;Species&quot;</span><span class="p">),</span> train<span class="p">)</span>
</span><span class="line">    error.rate <span class="o">=</span> sum<span class="p">(</span>test<span class="o">$</span>Species <span class="o">!=</span> predict<span class="p">(</span>tree<span class="p">,</span> test<span class="p">,</span> type<span class="o">=</span><span class="s">&quot;c&quot;</span><span class="p">))</span> <span class="o">/</span> nrow<span class="p">(</span>test<span class="p">)</span>
</span><span class="line">    <span class="kr">return</span><span class="p">(</span><span class="m">1</span> <span class="o">-</span> error.rate<span class="p">)</span>
</span><span class="line">  <span class="p">})</span>
</span><span class="line">  <span class="c1">#print(subset)</span>
</span><span class="line">  <span class="c1">#print(mean(results))</span>
</span><span class="line">  <span class="kr">return</span><span class="p">(</span>mean<span class="p">(</span>results<span class="p">))</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">subset <span class="o">&lt;-</span> best.first.search<span class="p">(</span>names<span class="p">(</span>iris<span class="p">)[</span><span class="m">-5</span><span class="p">],</span> evaluator<span class="p">)</span>
</span><span class="line">f <span class="o">&lt;-</span> as.simple.formula<span class="p">(</span>subset<span class="p">,</span> <span class="s">&quot;Species&quot;</span><span class="p">)</span>
</span><span class="line">print<span class="p">(</span>f<span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>###iris
This famous (Fisher’s or Anderson’s) iris data set gives the measurements in centimeters of the variables sepal length and width and petal length and width, respectively, for 50 flowers from each of 3 species of iris. The species are Iris setosa, versicolor, and virginica.</p>

<h3 id="cfs">cfs</h3>
<p>The algorithm finds attribute subset using correlation and entropy measures for continous and discrete data.</p>

<h2 id="hints">Hints</h2>
<ul>
  <li>虽然原生的R语言的IDE也不错用，但是发现一个更加强大的IDE，RStudio, 真是可以媲美matlab的IDE了。</li>
  <li>R语言也可以在命令行中用batch的方式来运行，具体指令是<code>R CMD BATCH [options] infile [outfile]</code>, infile就是R的脚本文件，R的输出一般无法显示到STDOUT中，是以文件的形式存起来。如果没有指定outfile，就会以原文件名的方式来命名。在脚本执行的时候，很多无关紧要的内容也会被输出，可以使用options命令的<code>--slave</code>. 在最后的输出中，他也会很好心的帮你计算运行时间，如果不需要，也可以加<code>--no-timing</code>. 详见<a href="http://stat.ethz.ch/R-manual/R-devel/library/utils/html/BATCH.html">http://stat.ethz.ch/R-manual/R-devel/library/utils/html/BATCH.html</a></li>
</ul>
]]></content>
  </entry>
  
</feed>
