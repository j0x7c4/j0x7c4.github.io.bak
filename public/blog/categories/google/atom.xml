<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Google | 醉過方知酒濃]]></title>
  <link href="http://2naive.me/blog/categories/google/atom.xml" rel="self"/>
  <link href="http://2naive.me/"/>
  <updated>2014-01-22T02:15:22+08:00</updated>
  <id>http://2naive.me/</id>
  <author>
    <name><![CDATA[Eli]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[开发Chrome插件中遇到的一些坑]]></title>
    <link href="http://2naive.me/blog/2013/12/23/my-first-chrome-extension/"/>
    <updated>2013-12-23T00:03:00+08:00</updated>
    <id>http://2naive.me/blog/2013/12/23/my-first-chrome-extension</id>
    <content type="html"><![CDATA[<p>前几天参加了一个hackthon, 在大约24小时的时间内，完成了一个chrome插件，插件扩展大众点评现有的一些功能，比如增加了街景视图，网页上的右键搜索菜单，和本地的点评商户收藏夹。具体可以自己使用看看，不过目前还没上架，可以下载源码来自己玩玩。<a href="https://github.com/j0x7c4/hackstreet">https://github.com/j0x7c4/hackstreet</a></p>

<p>以前没有太多JS的开发经验，这次开发是不断掉进坑里，然后再从坑里爬出来，直到最后有个完整版本出来。先说说chrome插件的配置文件吧，插件中有个叫<code>manifest.json</code>的文件，他管理了插件中所需的所有东西。</p>

<h2 id="hack">Hack现有网页的内容</h2>

<p>由于我们的插件需要修改大众点评网现有网页内容，比如在网页中插入我们的街景视图(我们的街景功能是用了腾讯街景的API). 这个就需要让<code>content_scripts</code>来做，他主要包括三个字段，<code>matches</code>, <code>css</code>, 和<code>js</code>. 只要把自己的JS文件名放到它的<code>js</code>字段中，一旦访问的URL符合规则，就会执行js中的脚本。例如：</p>

<p><code>json
"content_scripts": [ 
{
    "matches":["http://www.dianping.com/shop/*"],
    "css":["bootstrap.css"],
    "js":["hackit.js"]
}
]
</code></p>

<p>其中的CSS可以对自己添的内容制定样式。这个看似很简单，其实里面暗藏了一个大坑，不过也是因为自己太粗心，没有仔细看doc所导致的。由于我要在原有网页中嵌入一个街景视图，而街景视图用到了某企鹅的街景API，而那个API又必须是在线调用的。在普通的HTML中，要调用一个网上的脚本很方便，只需添加<code>&lt;script&gt;</code>标签，在<code>src</code>中指定脚本的URL。但是在chrome插件中，无法通过类似的方法，将脚本载入当前页面，并在插件的js脚本中调用。因为<code>content_scripts</code>中的脚本虽然可以访问当前页面的内容，但是无法调用当前页面中的js函数，这个在Chrome的开发文档中有提到：</p>

<blockquote>
  <p>However, content scripts have some limitations. They cannot:</p>

  <p>Use chrome.* APIs (except for parts of chrome.extension)</p>

  <p>Use variables or functions defined by their extension’s pages</p>

  <p>Use variables or functions defined by web pages or by other content scripts</p>
</blockquote>

<p><a href="http://developer.chrome.com/extensions/content_scripts.html">http://developer.chrome.com/extensions/content_scripts.html</a></p>

<p>因此只能把企鹅的js载到本地啦，然后再hack一下那个脚本，因为在本地调用需要做些修改。</p>

<h2 id="section">还有一些小东西</h2>

<p>开发chrome插件还有一些小东西可以分享一下，比如那个icon，文档中说最好是19x19的png图片，但如果真的把图片做成19x19，显示在浏览器中会比较糊（可能是因为我的retina屏幕）。其实把图片弄的大一点也是可以的，只要长宽比例是1:1就好。</p>

<p>如果在脚本中需要有一些跨域的请求，比如我将地址转化成经纬度时，是用到了google map的api, 我需要向<code>https://maps.googleapis.com/</code>发送请求，这就需要把<code>https://maps.googleapis.com/*</code>加入到<code>manifest.json</code>的<code>permissions</code>字段中。</p>

<p>还可以把一些公用的函数写在<code>background</code>的脚本中，然后通过message passing的方式去调用这些函数，不过具体效率还没测试过。在<code>background</code>中，可以直接使用<code>&lt;script&gt;</code>标签来添加在线的脚本。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在octopress中加入Google map]]></title>
    <link href="http://2naive.me/blog/2013/10/07/google-map/"/>
    <updated>2013-10-07T02:21:00+08:00</updated>
    <id>http://2naive.me/blog/2013/10/07/google-map</id>
    <content type="html"><![CDATA[<h3 id="google-mapapitt">需要科学上网才能正常显示Google Map(API被墙了T_T)</h3>

<p>想在octopress中插入地图信息，考虑到之后可能会在博客中加入关于游记的文章，如果文章能有形象的地图信息会有很好的效果。于是在网上搜寻octopress的地图插件，发现一个叫做<a herf="http://mguentner.github.io/octolayer/">Octolayer</a>的插件，想载下来试试，不过github刚好出问题，我无法获取代码，再加上他不是用google map. 作为一个google的忠实脑残粉，我就决定自己写一个。</p>

<p>研究了一下<a href="https://developers.google.com/maps/documentation/javascript/">google map API</a>，发现难度并不大。就是在我的文章内容中加入一个div，然后用js去render. 照着sample code改了一下代码，主要是为了从div的属性中读取经纬度坐标。（需要jQuery）</p>

<p>``` javascript gmap.js
function initialize() {
  var lat = $(“#map-canvas”).attr(“lat”); 
  var lng = $(“#map-canvas”).attr(“lng”); 
  console.log(lat);
  console.log(lng);
  var loc = new google.maps.LatLng(lat,lng);
  var mapOptions = {
    zoom: 7,
    center: loc,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };</p>

<p>map = new google.maps.Map(document.getElementById(‘map-canvas’),
      mapOptions);</p>

<p>var marker = new google.maps.Marker({
      position: loc,
      map: map,
      title: ‘Hello World!’
  });</p>

<p>}</p>

<p>google.maps.event.addDomListener(window, ‘load’, initialize);
```
<!--more--></p>

<p><b>但是上面的方法对于需要多个marker时会比较难处理，于是进行如下修改(10月7日下午修改)</b></p>

<p>``` javascript gmap.js
function initialize() {</p>

<p>if (!$(“div#map-canvas”)[0]) return; //check there is map-canves</p>

<p>var locations=[];</p>

<p>//get locations from div.map-marker
  $(“div.map-marker”).each(function(){
    console.log($(this).attr(‘name’));
    locations.push([$(this).attr(‘name’),$(this).attr(‘lat’),$(this).attr(‘lng’)]);
  });</p>

<p>var map = new google.maps.Map(document.getElementById(‘map-canvas’), {
      zoom: 10,
      center: new google.maps.LatLng(locations[0][1], locations[0][2]),
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });</p>

<p>var infowindow = new google.maps.InfoWindow();</p>

<p>for (i = 0; i &lt; locations.length; i++) {<br />
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations[i][1], locations[i][2]),
        map: map
      });</p>

<pre><code>  google.maps.event.addListener(marker, 'click', (function(marker, i) {
    return function() {
      infowindow.setContent(locations[i][0]);
      infowindow.open(map, marker);
    }
  })(marker, i));   } }
</code></pre>

<p>google.maps.event.addDomListener(window, ‘load’, initialize);</p>

<p>```</p>

<p>把<code>gmap.js</code>放在<code>source/javascripts</code>中，并且在<code>source/_includes/head.html</code>中加入下面几行：</p>

<p><code>html
&lt;script async="true" src="http://2naive.me//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"&gt;&lt;/script&gt;
&lt;script src="https://maps.googleapis.com/maps/api/js?v=3.exp&amp;sensor=false"&gt;&lt;/script&gt;
&lt;script src="/javascripts/gmap.js"&gt;&lt;/script&gt;
</code></p>

<p>如果已经在前面加过jQuery的话，就不用加第一行了。
然后在文章中，加入下面这段html代码。
其中div.map-marker用来传递每个marker的信息（lat和lng表示地点的经纬度，name表示marker的名字，这些是目前是需要自己输入的）; div#map-canvas用来最终显示地图。</p>

<p><code>html
&lt;div class="map-marker" lat="-33.890542" lng="151.274856" name = "BondiBeach" &gt;&lt;/div&gt;
&lt;div class="map-marker" name = "CoogeeBeach" lat= "-33.923036" lng="151.259052"&gt;&lt;/div&gt;
&lt;div id="map-canvas"&gt;&lt;/div&gt;
</code></p>

<p>我以为这样子应该能显示地图了，可是实际上却无法显示。这个问题我折腾了很久，最后才发现需要给div加css. 所以要在<code>source/stylesheets</code>中创建一个css样式文件（被HTML坑了）。</p>

<p><code>css gmap.css
#map-canvas { margin: 20px 0 20px 0; height: 300px;}
</code></p>

<p>所以在<code>source/_includes/head.html</code>中也要加入下面这行：</p>

<p><code>html
&lt;link href="http://2naive.me/stylesheets/gmap.css" rel="stylesheet" type="text/css"&gt;
</code></p>

<p>这样子应该可以出现下面的结果了：</p>

<div class="map-marker" lat="-33.890542" lng="151.274856" name="BondiBeach"></div>
<div class="map-marker" name="CoogeeBeach" lat="-33.923036" lng="151.259052"></div>
<div id="map-canvas"></div>

<p>目前存在的问题是，因为都使用id叫map-canvas的div, 所以在同个页面中显示多个地图就会出错了。之后再想办法改进。又快天亮了，先睡了zzz</p>
]]></content>
  </entry>
  
</feed>
